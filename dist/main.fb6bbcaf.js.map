{"version":3,"sources":["js/movieSearch.js","js/welcome.js","js/findById.js","js/upcomingMovies.js","js/topRatedMovies.js","js/main.js"],"names":["searchInput","document","querySelector","imageBaseURL","backdrop_image","displaySearch","obj","topRatedContainer","output","heading","result","results","count","total_results","classList","add","innerText","movie","tvShows","forEach","item","media_type","poster_path","posterPlaceholder","id","title","name","innerHTML","value","welcome","poster","backdrop_path","overview","movieById_URL","style","backgroundImage","console","log","fetch","then","response","json","movieById","genres","moviePoster","catch","error","month","findById","data","cardWrapper","releaseDate","release_date","split","genreList","card","vote_average","runtime","homepage","displayTopRatedMovies","topRated","topRatedHeading","movies","searchButton","api_key","multiSearch_url","upcoming_URL","topRated_URL","getData","url","func","addEventListener","e","keyCode","searchMovie","multipleSearch","handleData","displayUpcomingMovies","handleModal","modal","modalCard","closeModal","remove","target","movieID","dataset","movieId","tagName","toLowerCase"],"mappings":"AGAA;AAEA;AEFA,AFGA;AACA;AEHA,AFIA;AACA;ADNA,AGEA,ADFA,ADOA,AFPA,ICAMG,AEAAA,AHAAA,YCAY,AEAA,AHAA,GCAG,AEAA,AHAA,kCCArB,AEAA,IHAA;ACCA,AFIA,AGGA,IDPM4C,KAAK,GAAG,CAAC,KAAD,EAAQ,KAAR,EAAe,OAAf,EAAwB,OAAxB,EAAiC,KAAjC,EAAwC,MAAxC,EAAgD,MAAhD,EAAwD,KAAxD,EAA+D,MAA/D,EAAuE,KAAvE,EAA8E,KAA9E,EAAqF,KAArF,CAAd;AGEA,ADDO,ADQP,AFRO,IGAMY,AHAA9B,OAAO,GAAG,WGAW,GAAG,GHAbvB,GAAD,EAAS,CGAnBqD,qBAAwB,CAACrD,GAAD,EAAS;AFCvC,AEAH,ADQJ,AFRI,ICAS0C,EEAHY,AHAA/B,MCAW,CDAJ,CGAC,CFAM,CDAJ5B,CGACA,OFAR+C,ADAe,CGAC,AHAA9C,CGACA,MFAN,CAACsB,EAAD,EAAQ,CDAZ,CGAC,AHAsB,CGAC,SHAxB,CAAhB,WGAiB,CAAjB;AFCAc,AGAJ,ADAI,ADQJ,AFRI,ECAAA,IEAMuB,AHAA5C,CCAD,CAAC,GDAK,GAAGX,GAAG,CAACK,GGAG,GAAGV,CHAV,CAAY,CAAZ,CAAd,IGAgC,CAACC,aAAT,CAAuB,CFADsB,EAAxC,GAA6C,WAA7C,KEAkB,CAAxB,kCFAuF,iBAAlF,CAAL,CACKe,IADL,CACU,UAAAC,QAAQ;AAAA,AFLtB,AIKI,ADQJ,AFRI,IDLExC,EIKI8D,AHAAhC,KCAgBU,CEAV,AHAA,GDLC,AIKElC,AHAAH,GDLCF,AIKE,CFAY,AEAXU,CFAY8B,IAAT,EAAJ,AFLM,AIKxB,CJLyBvC,AIEiB,AHGf,CGE3B,EHF8Be,KAAK,CAACc,IDLpB,CAAuB,QCKvC,QDLgB,CAApB;AEKsB,AGCtB,ALLA,AGaA,AFRI,GCFA,CGEE/B,ALLAG,CEKGoC,CDACd,GCFN,CAEU,CDAC,GAAGR,CIAD,CLLC,EKKEhB,CLLC,ACKE,CCATgD,ADAUxB,ICAN,CDAd,CCAkB,AGAM,CAACvB,aAAT,CAAuB,YLL3C,IKKoB,CAApB;AHCY,AGAZ,ALLA,AIMI2D,ADQJ,AFTI,EGCAA,ECDEE,ALLA3D,ECKI4B,ECAQkB,MDAA,EIAA,CDCC,AHDEjC,CDLD,AIMAD,CFDS,AGARf,ELLE,CEKSA,ADAN,CAAC+B,IIAE,ADCzB,CCD0B9B,EHAU,AECR,CFDSA,ADArC,UIAiB,CAAuB,EHAZ,CAAuB,GECnD,CAN0C,CAS1C,CCJiB,CAArB,OHAgC,AFLhC,CEKY,CFHZ;AEIYkC,AGCZ,AFQA,AFTI,ICAQA,AGCN4B,EJDI/B,KCAS,AGCN,CHDOI,GAAR,CAAYY,GDAD,CCAX,EDAc,0BIC1B,cJDkEhC,KAAK,CAACO,EAA9C,GAAmD,WAAnD,wCAAuF,iBAA7G,CAN4B,CAQ5B;ACDQ,AGCZ,ALHA,AIKI,ADMJ,IERMyC,EDEEhD,EFHU0B,GEGL,GFHW,AEGR,EAAZ,CFHuBM,EGCN,EHDU,CAACN,AGCR,MHDZ,iDGCmEqB,OAAvD,GAAiE,sBAAzF;AHAY,AGCZ,ALHO,AIKHF,ADMJ,AFRIjC,EGEAiC,AHFAjC,EIAEqC,ALHO7D,IEEK8C,AEGR,CAAChC,AHFA,CAACe,KAAR,CIAc,ADEd,AHFcC,CDHQ,AIKP,EFHU,AGCR,CLHQ,EEEGc,IAAI,CAACG,AEGlBhC,EJLNf,EIKU,AHFnB,EGEuB,MFHK,CAAkBgD,EFFrB,CAAC/C,EEEE,CAAwB,AFF3B,EAAS,ACGKwB,CCDX,CAApB,IDCR,sBIA0EkC,OAA9E;AHCY,AGAZ,ALHI,AIKI/C,ADMR,AFPImB,EAAAA,EIDE+B,ADEElD,EJLEV,EEGM+C,CEEH,AHDF,CAACjB,GAAR,CAAY/B,EIDE,CHAO,ADCrB,EIDiB,AJVW,CCUJ,ADExB,ECFQ,CFHe,GAAGL,QAAQ,CAACC,aAAT,CAAuB,aAAvB,CAA1B,cKG2E8D,OAA/E,EAEA,KDEuB7D,YAAY,GAAGiB,IAAI,CAACE,WAF9B,4BAE2DF,IAAI,CAACI,EAFhE,mGAG8BJ,IAAI,CAACK,KAHnC,yBAAL;AFDIkB,AFHR,AISC,ADEL,GCRI,CFAQA,CEXkC,CJQpCnC,AIWN,IFRc,CAACW,CFHH,GAAGlB,GEGP,CAAe,IFHA,CAACC,KEGDkB,IAAI,EAAI,EFHhB,CAAuB,SAAvB,CAAf;AEIYkC,AGChB,ALJI,AGWJ,AFPIhB,EAAAA,EIAE8B,EHDUd,AFHN7C,CCID,CAACwB,GIAG,ELJI,CKID,CHDS,CFHLhC,KCIX,CAAL,CIAEmE,AJCG7B,CDLmB,CAACrC,ECIzB,CACU,EIDE,CAACmE,GAAD,EAAMC,ELJF,ACKN9B,CDL6B,CKI3B,EAAe,IJCT,SCFkCpB,IAAI,CAACM,IAApC,EFHL,CAAhB,OEGY;AACH,AGCTY,ALJA,AIUAsB,ADCJ,AFPsB,EIAlBtB,ADMAsB,GFTQ,CFDFlD,CKID,CAAC2D,EDME,CCNH,ADMI1C,AHNaa,CIAtB,ALJY,CKKPD,ELLUjC,EKIf,CACU,ALLQ,CAACK,ACIW,CGM9B,AHN+B8B,GGMVxB,CHNC,EDJtB,ACIkB,EICRuB,ADKV,QCLkB;AHAX,AGAW,ALJlB,AIUH,ADCD,AFRsB,CGdf,EHaH,EAEKD,CDJC3B,EEIK2C,CDFX,CAEU,CIAYf,ALJX,CEII,EFJDlC,GAAG,CAACO,CKIY,CAAC4B,AJArBC,IIAY,EAAJ,GJAC,EDJnB,ACIuB,CDTW,CAOlC,yFEI+BvC,YAAY,GAAG8C,IAAI,CAAC3B,WAFpC,6TAMgG2B,IAAI,CAACO,YANrG,sFAOoCP,IAAI,CAACxB,KAPzC,0EAQmC6B,SARnC,8FASuDH,WAAW,CAAC,CAAD,CATlE,eAS0EA,WAAW,CAAC,CAAD,CATrF,eAS6FA,WAAW,CAAC,CAAD,CATxG,oFAU8CF,IAAI,CAACQ,OAVnD,mQAcsCR,IAAI,CAACjB,QAd3C,yDAeoBiB,IAAI,CAACS,QAfzB,wKAAR;AAmBCR,AGnBU,AFQtB,AFPY,GIFR,CHoBQA,CGlBHX,GJASI,CIFd,CAEU,IJAU,CCkBD,CAAChB,CDlBGe,GIAbO,IAAI,CHkBN,CDlBwB,CAACN,CCkBDY,IAAxB,CDlBA,CADe,CACkB;ACmBpC,AGnBS,ALFdhD,AGUJ,EHVIA,CEZA,EAkCKsC,KAlCL,CAkCW,AGpBOyB,IAAI,CAACrB,GLFN,CKEK,ALFJnC,CEsBPgC,AGpBG,KHoBE,GFtBhB,CAA4B/B,GAA5B,CAAgC,SAAhC;AEsBgB,AGpBF,AFSlB,AFPY,GIJR,EAGK8B,GJCOD,EIJZ,CHsBoBE,AGnBT,KHmBK,GDlBO,EIDZA,KAAK,2GJG6BrB,KAFtB,mJAI+BO,QAJ/B,4MAAf,CAHe,CAYf;ACSQ,AGnBA,ALDhB,AGUJ,GDxBI,GFcIpB,KKCgBkC,ALDX,KKCO,ALDF,CAAd,EAAiB;AEqBpB,AGpBmB,ALAZrC,AGUR,AFCYoB,CC3BL,EGaH,CLGIpB,ACWIoB,ODXG,ACWI,CDXHb,ACWIW,SDXZ,ACWI,GDXgB,ACWIiB,WAApB,QDXJ;AKCP,ALAI,AGUL,AFCS,CIhBT,EAOA,ALJI,ACHA,EAiBKC,IDZE,CCLP,CAiBW,UAAAC,KAAK;ADXZrC,AGUR,AFCoB,IDXZA,OAAO,ACWSqC,CDXR9B,ICWI,KDXZ,aAAuBJ,KAAvB;AACH,AGWL,AFDoB,GAjBhB,EAb4B,CAgC5B;AIXJZ,AFWA,AFCI,WIZO,CAACuE,gBAAZ,CAA6B,OAA7B,EAAsC,UAACC,CAAD,EAAO;AAEzC,ALDA,AGWJ,AFCI,MIXIxE,ALDAiB,KAAK,GAAG,EAAZ,CKCe,CAACW,KAAZ,KAAsB,EAA1B,EAA8B;AAC1B,ALDJ,AGWJ,AFKI,MDhBIV,OAAO,GAAG,EAAd;AKEC,ALADR,AGWJ,AFII,EDfAA,CKFA,KLEM,CKAC,ALAAS,OAAP,CAAe,UAAAC,IAAI,EAAI;AKCnB,ALAA,AGWR,AFII,QIfQoD,ALAApD,CKAC,CAACqD,ELAE,CAACpD,IKAL,KAAc,CLAd,CKAJ,EAAsB,ELAE,OAAxB,EAAiC;AKC7BqD,ALAAzD,AGWZ,AFII,MIfQyD,ALAAzD,KAAK,MKAM,kFLEIG,IAAI,CAACE,WAAL,KAAqB,IAArB,GAA4BC,2BAA5B,GAAgDpB,YAAY,GAAGiB,IAAI,CAACE,WAF9E,4BAE2GF,IAAI,CAACI,EAFhH,8GAGkCJ,IAAI,CAACK,KAHvC,8BAAL;AKCH,ALIA,AGWT,AFAI,KDjBI,MAMO,IAAIL,IAAI,CAACC,UAAL,KAAoB,IAAxB,EAA8B;AKHxC,ALIOH,AGWZ,AFAI,MDXQA,OAAO,wFAEQE,IAAI,CAACE,WAAL,KAAqB,IAArB,GAA4BC,2BAA5B,GAAgDpB,YAAY,GAAGiB,IAAI,CAACE,WAF5E,4BAEyGF,IAAI,CAACI,EAF9G,8GAGgCJ,IAAI,CAACM,IAHrC,8BAAP;AKHX,ALQQ,AGOT,AFAI,CIxBJ;AAWAqC,ALOK,AGOL,AFAI,GDrBA,EAnBkC,CAmClC,MKTQ,CAACQ,gBAAb,CAA8B,OAA9B,EAAuC,YAAM;AACzC,AFcJ,AFAI,MIdIvE,WAAW,CAAC4B,KAAZ,KAAsB,EAA1B,EAA8B;AAC1B,ALQJpB,AGMJ,AFAI,EDNAA,MAAM,CAACmB,SAAP,GAAmBV,KAAK,GAAGC,OAA3B,CApCkC,CAsClC;AKTC,AFcL,AFAI,GIhBA,MAEO;AACHwD,ALSJ1E,AGKJ,AFAI,EDLAA,EKTI0E,SLSO,CAAC9C,CKTG,ILSf,GAAoB,EAApB;AKRC,ALSJ,AGKD,AFAI,CD7CG;AKgCN,AFcD,AFAI,CIpBJ,GAQA;AFaA,AFAI;AIZJ,AFaA,AFAI,IIbE8C,WAAW,GAAG,SAAdA,WAAc,GAAM;AACtB,AFaJ,AFAC,CAvDM,KI0CG9C,KAAK,GAAG5B,WAAW,CAAC4B,KAA1B;AACA,AFaJ,MEbU+C,cAAc,GAAGV,eAAe,GAAG,SAAlB,GAA8BrC,KAArD;AACAwC,AFaJ,EEbIA,OAAO,CAACO,cAAD,EAAiBtE,0BAAjB,CAAP;AACH,AFaD,CEjBA,EAMA;AFYA;;AEXA,IAAMuE,UAAU,GAAG,SAAbA,UAAa,GAAM;AACrB;AACAR,EAAAA,OAAO,CAACF,YAAD,EAAerC,gBAAf,CAAP,CAFqB,CAGrB;;AACAuC,EAAAA,OAAO,CAACF,YAAD,EAAeW,qCAAf,CAAP,CAJqB,CAKrB;;AACAT,EAAAA,OAAO,CAACD,YAAD,EAAeR,qCAAf,CAAP;AACH,CAPD,EASA;;;AACA,IAAMmB,WAAW,GAAG,SAAdA,WAAc,GAAM;AACtB,MAAMC,KAAK,GAAG9E,QAAQ,CAACC,aAAT,CAAuB,QAAvB,CAAd;AACA,MAAM8E,SAAS,GAAG/E,QAAQ,CAACC,aAAT,CAAuB,cAAvB,CAAlB;AACA,MAAM+E,UAAU,GAAGhF,QAAQ,CAACC,aAAT,CAAuB,eAAvB,CAAnB;AAEA+E,EAAAA,UAAU,CAACV,gBAAX,CAA4B,OAA5B,EAAqC,YAAM;AACvCS,IAAAA,SAAS,CAACrD,SAAV,GAAsB,EAAtB;AACAoD,IAAAA,KAAK,CAACjE,SAAN,CAAgBoE,MAAhB,CAAuB,SAAvB;AACH,GAHD;AAKAjF,EAAAA,QAAQ,CAACsE,gBAAT,CAA0B,OAA1B,EAAmC,UAACC,CAAD,EAAO;AACtC,QAAMW,MAAM,GAAGX,CAAC,CAACW,MAAjB;AACA,QAAMC,OAAO,GAAGD,MAAM,CAACE,OAAP,CAAeC,OAA/B;;AAEA,QAAIH,MAAM,CAACI,OAAP,CAAeC,WAAf,OAAiC,KAArC,EAA4C;AACxCT,MAAAA,KAAK,CAACjE,SAAN,CAAgBC,GAAhB,CAAoB,SAApB;AACA,8BAASqE,OAAT;AACH;AACJ,GARD;AASH,CAnBD;;AAqBAN,WAAW;AACXF,UAAU","file":"main.fb6bbcaf.js","sourceRoot":"..","sourcesContent":["const searchInput = document.querySelector('.search__input');\nconst imageBaseURL = 'https://image.tmdb.org/t/p/w500/';\nconst backdrop_image = 'https://image.tmdb.org/t/p/original/'\n\n// Poster placeholder\nimport posterPlaceholder from '../img/poster_unavailable.jpg';\n\n// HANDLE SEARCH DISPLAY\nexport const displaySearch = (obj) => {\n    const topRatedContainer = document.querySelector('.top__rated');\n    const output = document.querySelector('.output');\n    const heading = document.querySelector('.search__results--heading');\n    const result = obj.results;\n    const count = obj.total_results;\n\n    // clear top rated container\n    topRatedContainer.classList.add('hideAll');\n\n    if (count === 0) {\n        heading.innerText = 'No results found.';\n    } else {\n        heading.innerText = `${count} results found`;\n    }\n    \n    let movie = '';\n    let tvShows = '';\n\n    result.forEach(item => {\n        if (item.media_type === 'movie') {\n            movie +=`\n            <div class=\"template__wrapper\">\n                <img src=${item.poster_path === null ? posterPlaceholder : imageBaseURL + item.poster_path} data-movie-id=${item.id} class=\"search__movie--poster\" alt=\"\" />\n                <h4 class=\"search__movie--title\">${item.title}</h4>\n            </div>`;\n        } else if (item.media_type === 'tv') {\n            tvShows +=`\n            <div class=\"template__wrapper\">\n                <img src=${item.poster_path === null ? posterPlaceholder : imageBaseURL + item.poster_path} data-movie-id=${item.id} class=\"search__movie--poster\" alt=\"\" />\n                <h4 class=\"search__movie--title\">${item.name}</h4>\n            </div>`;\n        }\n    })\n\n    // Output results\n    output.innerHTML = movie + tvShows;\n\n    // Clear input field\n    searchInput.value = '';\n}","const imageBaseURL = 'https://image.tmdb.org/t/p/original/';\n\nexport const welcome = (obj) => {\n    const welcome = document.querySelector('.welcome');\n    const movie = obj.results[4];\n    const poster = imageBaseURL + movie.backdrop_path;\n    const title = movie.title;\n    const overview = movie.overview;\n    const movieById_URL = 'https://api.themoviedb.org/3/movie/' + movie.id + '?api_key=' + process.env.API_KEY + '&language=en-US';\n\n    // Add background poster to welcome container\n    welcome.style.backgroundImage = `url(${poster})`;\n\n    console.log(obj);\n    // get current movie info\n    fetch(movieById_URL)\n        .then(response => response.json())\n        .then(movieById => {\n            const genres = movieById.genres; // returns an array\n\n            let moviePoster = `\n                <div class=\"welcome__content\">\n                    <h1 class=\"welcome__title\">${title}</h1>\n                    <div class=\"welcome__description--container\">\n                        <p class=\"welcome__description\">${overview}</p>\n                        <a href=\"#\" target=\"_blank\" class=\"welcome__button\">View more <i class=\"fas fa-long-arrow-alt-right\"></i></a>\n                    </div>\n                </div>`;\n            \n            // Output results\n            welcome.innerHTML = moviePoster;\n        })\n        .catch(error => error);\n        \n    // fetch(`https://api.themoviedb.org/3/movie/${movie.id}?api_key=${process.env.API_KEY}&language=en-US`)\n    //     .then(response => response.json())\n    //     .then(data => console.log(data))\n\n    \n\n    \n    // let movie = '';\n    // movies.forEach(item => {\n    //     movie +=`\n    //     <div class=\"upcoming__card--wrapper\">\n    //         <div class=\"upcoming__poster--container\">\n    //             <img src=${imageBaseURL + item.poster_path} class=\"upcoming__poster\" alt=\"\" />\n    //         </div>\n    //         <div class=\"upcoming__description\">\n    //             <h1 class=\"upcoming__title\">${item.title}</h1>\n    //             <div>\n    //                 <p class=\"upcoming__story\">Story</p>\n    //                 <p class=\"upcoming__story--description\">${item.overview}</p>\n    //             </div>\n    //         </div>\n    //     </div>`;\n    // })\n}","const imageBaseURL = 'https://image.tmdb.org/t/p/w500/';\nconst month = ['Jan', 'Feb', 'March', 'April', 'May', 'June', 'July', 'Aug', 'Sept', 'Oct', 'Nov', 'Dec'];\n\nexport const findById = (id) => {\n    fetch('https://api.themoviedb.org/3/movie/' + id + '?api_key=' + process.env.API_KEY + '&language=en-US')\n        .then(response => response.json())\n        .then(data => {\n            const cardWrapper = document.querySelector('.modal__card');\n            console.log(data);\n            const genres = data.genres;\n            const releaseDate = data.release_date.split('-');\n\n            let genreList = '';\n            genres.forEach(item => {\n                genreList += `<li class=\"modal__item\">${item.name}</li>`\n            });\n\n           let card = `\n                    <div class=\"modal__poster--container\">\n                        <img src=${imageBaseURL + data.poster_path} alt=\"Poster\" class=\"modal__poster\">\n                    </div>\n                    <div class=\"modal__content\">\n                        <div class=\"modal__title--wrapper\">\n                            <p class=\"modal__rate\"><span class=\"modal__rate--sizeup\"><i class=\"fas fa-star\"></i> ${data.vote_average}</span> / 10</p>\n                            <h1 class=\"modal__title\">${data.title}</h1>\n                            <ul class=\"modal__list\">${genreList}</ul>\n                            <p class=\"modal__releaseDate\">Release date: ${releaseDate[1]}, ${releaseDate[2]}, ${releaseDate[0]}</p>\n                            <p clas=\"modal__runtime\">Duration: ${data.runtime}min</p>\n                        </div>\n                        <div class=\"modal__synopsis--wrapper\">\n                            <h3 class=\"modal__overview--heading\">Synopsis</h3>\n                            <p class=\"modal__overview\">${data.overview}</p>\n                            <a href=\"${data.homepage}\" target=\"_blank\" class=\"modal__button\">Homepage <i class=\"fas fa-long-arrow-alt-right\"></i></a>\n                        </div>\n                    </div>`;\n\n            cardWrapper.innerHTML = card;\n        })\n        .catch(error => error)\n}","// const imageBaseURL = 'https://image.tmdb.org/t/p/w500/';\n\n// export const displayUpcomingMovies = (obj) => {\n//     const upcoming = document.querySelector('.upcoming__movies');\n//     const movie = obj.results[5];\n//     const poster = imageBaseURL + movie.poster_path;\n//     const title = movie.title;\n//     const overview = movie.overview;\n//     const movieById_URL = 'https://api.themoviedb.org/3/movie/' + movie.id + '?api_key=' + process.env.API_KEY + '&language=en-US'\n\n//     // get current movie info\n//     fetch(movieById_URL)\n//         .then(response => response.json())\n//         .then(movieById => {\n//             const genres = movieById.genres; // returns an array\n\n//             let moviePoster = `\n//                 <div class=\"upcoming__card--wrapper\">\n//                     <div class=\"upcoming__description\">\n//                         <h1 class=\"upcoming__title\">${title}</h1>\n//                         <p class=\"upcoming__genre\">${genres[0].name} <span class=\"genre__separator\">|</span> ${genres[1].name}</p>\n//                         <div class=\"upcoming__overview\">\n//                             <h3 class=\"overview__title\">The <br />Story</h3>\n//                             <div>\n//                                 <p class=\"overview__description\">${overview}</p>\n//                                 <button type=\"button\" class=\"upcoming__button\">Read more <i class=\"fas fa-long-arrow-alt-right\"></i></button>\n//                             </div>\n//                         </div>\n//                     </div>\n//                     <div class=\"upcoming__poster--container\" style=\"background-image: url(${poster});\"></div>\n//                 </div>\n//             `;\n            \n//             // Output results\n//             upcoming.innerHTML = moviePoster;\n//         })\n//         .catch(error => error);\n        \n//     // fetch(`https://api.themoviedb.org/3/movie/${movie.id}?api_key=${process.env.API_KEY}&language=en-US`)\n//     //     .then(response => response.json())\n//     //     .then(data => console.log(data))\n\n    \n\n    \n//     // let movie = '';\n//     // movies.forEach(item => {\n//     //     movie +=`\n//     //     <div class=\"upcoming__card--wrapper\">\n//     //         <div class=\"upcoming__poster--container\">\n//     //             <img src=${imageBaseURL + item.poster_path} class=\"upcoming__poster\" alt=\"\" />\n//     //         </div>\n//     //         <div class=\"upcoming__description\">\n//     //             <h1 class=\"upcoming__title\">${item.title}</h1>\n//     //             <div>\n//     //                 <p class=\"upcoming__story\">Story</p>\n//     //                 <p class=\"upcoming__story--description\">${item.overview}</p>\n//     //             </div>\n//     //         </div>\n//     //     </div>`;\n//     // })\n// }","const imageBaseURL = 'https://image.tmdb.org/t/p/w342/';\n\nexport const displayTopRatedMovies = (obj) => {\n    const topRated = document.querySelector('.top__rated--movies');\n    const topRatedHeading = document.querySelector('.top__rated--heading');\n    const movies = obj.results;\n    \n    // Insert heading\n    topRatedHeading.innerText = 'Top Rated Movies';\n\n\n    // Create movie card\n    let movie = '';\n    movies.forEach(item => {\n        movie +=`\n        <div class=\"top__rated--wrapper\">\n            <img src=${imageBaseURL + item.poster_path} data-movie-id=${item.id} class=\"top__rated--poster\" alt=\"\" />\n            <p class=\"top__rated--title\">${item.title}</p>\n        </div>`;\n    })\n\n    // Output results\n    topRated.innerHTML = movie;\n}","import { displaySearch } from './movieSearch.js';\nimport { welcome } from './welcome.js';\nimport { findById } from './findById.js';\nimport { displayUpcomingMovies } from './upcomingMovies.js';\nimport { displayTopRatedMovies } from './topRatedMovies.js';\n\nconst searchInput = document.querySelector('.search__input');\nconst searchButton = document.querySelector('.search');\n\nconst api_key = process.env.API_KEY;    \nconst multiSearch_url = 'https://api.themoviedb.org/3/search/multi?api_key=' + api_key + '&include_adult=false';\nconst upcoming_URL = 'https://api.themoviedb.org/3/movie/upcoming?api_key=' + api_key;\nconst topRated_URL = 'https://api.themoviedb.org/3/movie/top_rated?api_key=' + api_key;\n\n// Get data\nconst getData = (url, func) => {\n    fetch(url)\n        .then(response => response.json())\n        .then(data => func(data))\n        .catch(error => error)\n}\n\n//  SEARCH BAR EVENT LISTENERS\nsearchInput.addEventListener('keyup', (e) => {\n\n    if (searchInput.value === '') {\n        false;\n    } else {\n        if (e.keyCode === 13) {\n            searchMovie();\n        }\n    }\n})\n\nsearchButton.addEventListener('click', () => {\n    if (searchInput.value === '') {\n        false;\n    } else {\n        searchMovie();\n    }\n});\n\n// Handle movie search\nconst searchMovie = () => {\n    const value = searchInput.value;\n    const multipleSearch = multiSearch_url + '&query=' + value;\n    getData(multipleSearch, displaySearch);\n}\n\n// Handle data\nconst handleData = () => {\n    // handle welcome section\n    getData(upcoming_URL, welcome);\n    // handle upcoming movies\n    getData(upcoming_URL, displayUpcomingMovies);\n    // handle top rated movies\n    getData(topRated_URL, displayTopRatedMovies);\n}\n\n// Display movie info on click\nconst handleModal = () => {\n    const modal = document.querySelector('.modal');\n    const modalCard = document.querySelector('.modal__card');\n    const closeModal = document.querySelector('.close__modal');\n\n    closeModal.addEventListener('click', () => {\n        modalCard.innerHTML = '';\n        modal.classList.remove('isShown');\n    })\n\n    document.addEventListener('click', (e) => {\n        const target = e.target;\n        const movieID = target.dataset.movieId;\n        \n        if (target.tagName.toLowerCase() === 'img') {\n            modal.classList.add('isShown');\n            findById(movieID);\n        }\n    })\n}\n\nhandleModal();\nhandleData();\n"]}