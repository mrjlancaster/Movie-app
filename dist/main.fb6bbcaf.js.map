{"version":3,"sources":["js/movieSearch.js","js/findById.js","js/upcomingMovies.js","js/topRatedMovies.js","js/main.js"],"names":["searchInput","document","querySelector","imageBaseURL","backdrop_image","displaySearch","obj","upcomingContainer","topRatedContainer","output","heading","result","results","count","total_results","classList","add","innerText","movie","tvShows","forEach","item","media_type","poster_path","posterPlaceholder","id","title","name","innerHTML","value","findById","fetch","then","response","json","data","cardWrapper","console","log","genres","genreList","releaseDate","release_date","split","card","vote_average","runtime","overview","homepage","catch","error","displayUpcomingMovies","upcoming","poster","movieById_URL","movieById","moviePoster","displayTopRatedMovies","topRated","topRatedHeading","movies","searchButton","api_key","multiSearch_url","upcoming_URL","topRated_URL","getData","url","func","addEventListener","e","keyCode","searchMovie","multipleSearch","handleUpcomingMovies","handleTopRatedMovies","handleModal","modal","modalCard","closeModal","remove","target","movieID","dataset","movieId","tagName","toLowerCase"],"mappings":";;AIAA;;AACA;;AHDA,AGEA,ADFA,ADAA,IDAMG,AEAAA,ADAAA,YDAY,AEAA,ADAA,GDAG,AEAA,ADAA,kCDArB,AEAA,ADAA;AFKA;ACHO,AGCP,ADDO,ADAA,IDAM2B,AEAA2B,ADAAN,QDAQ,GAAG,SAAXrB,CEAqB,ADAA,GCAG,ADAA,IDAb,CAACL,EAAD,EAAQ,AEAnBgC,ADAAN,qBCAwB,ADAA,CCAC7C,ADAAA,GCAD,ADAA,ECAS,ADAA;ADC1CyB,AEAA,ADAA,EDAAA,IEAM2B,ADAAN,CDAD,CAAC,MEAQ,ADAA,GCAGnD,ADAAA,QCAQ,ADAA,CCACC,ADAAA,aCAT,ADAA,CCAuB,ADAA,QDAMuB,EAAxC,GAA6C,MCAlC,CAAjB,CCAiB,CAAjB,EFAM,wCAAiF,iBAAlF,CAAL,CACKO,IADL,CACU,UAAAC,QAAQ;AAAA,AGCtB,ADDI,ADAA,IECEjC,EDDI2D,ADAAzC,KDAgBe,ACAX,GAAG3B,CECD,EFDI,CECDL,AFDEW,CDAY,CAACsB,CEAV,GFAC,AEAEjC,CDAV,CDAI,AGCM,AFDE,CECDC,AFDX,CAAd,ICAgC,CAACA,OCCjB,CAAuB,KDDf,CAAuB,UCC/B,CAApB,WDD4B,CAAxB;AFAkB,AGEtB,AJNA,AGKI,ADAA,GDFA,CGGE2D,AJNA7D,CCKGgC,CEAC4B,ADAAP,GDFN,CAEU,EEAE,ADAA,GFLC,AGKE/C,ADAAH,CECD,EJNEF,AGKE,CCCDA,ADDEW,CFATuB,IAAI,EAAI,ADLM,AGKxB,CCCyB,AJNAjC,AGEiB,ADGf,CECDA,ADC1B,EDF8BgB,KAAK,CAACK,IFLpB,CIMC,AJNsB,CIMC,KFDxC,IECiB,CAArB,KJNoB,CAApB;ACMY,AGEZ,AJPA,AEKI,IEEEuC,AJPA3D,EEKIuB,EDAQU,GGEL,AFFE,GAAGlB,EFLA,GCKW,ADLR,AEKE,CAACQ,EDAQzB,GCA5B,KDAoC,CAACC,aAAT,CAAuB,GGEvD,KJPA,MCKgC,CAApB;AACAmC,AGEZ,AJPA,AGMIsB,ADDA,ECCAA,EFDQtB,AGEN0B,AJPA3D,EEKI2C,KDAS,CAACT,ECAF,CDAN,CAAYH,CECL,ADDEjB,CFLD,AGMAD,CCCC,CHFT,CDLW,CIOC,AFFE,CAAC8B,ICCvB,GAA4B,CDD5B,iBCCA,CAN0C,CAS1C,SHTJ,EAEA,gBIK+Ee,OAAvD,GAAiE,sBAAzF;AHDY,AGEZ,AFFI,IEEEE,EFFIV,EDAQf,MAAM,EGEN,CHFSJ,EGEN,AFFE,EDAQ,CAACI,ACAN,MDAd,kCCAsDrB,KAAK,CAACO,EAA9C,GAAmD,GEECqC,OAA9E,CFF0B,wCAAuF,iBAA7G,CAN0C,CAQ1C;ADDQ,AGEZ,AJJA,AGKI,ICDEG,EDCE/C,EFHQsB,GEGH,GAAG,ECDE,ADCd,CFHqB,EGEJ,CHFO,EAAhB,uDGEmEsB,OAA/E,EAEA;AHHY,ADFL,AGKHF,ADFA7B,ECEA6B,ADFA7B,EFHS1B,GEGJ,CDDSoC,AEGR,ADFAa,CCEClC,OAAP,CHLsB,AGKP,EFHU,CDFA,CEGpB,CDDuBe,ACC5B,CACKH,GDF2B,CAACU,AEGlBrB,ADFf,CACU,CFJDhB,EGKU,EAAI,KDDb4B,CDFkB,CAAkBU,EDFrB,CAACrC,ECEE,CAAwB,ADF3B,AEIP,EFJgB,CCEN,CAApB;AACAiC,AGGZ,AJLI,AGKIrB,ADFc,IDDVqB,AGGN2B,ADAEhD,EHLEX,GGKG,CFHK,CAACa,AGGN,AFFaa,GEEV,IHHJ,CAAe,ACCO,CAACC,GEE7BgC,AJLqB,CEGD,EFHIjE,AEGR,GDDKoB,CGGX,CAAC8C,EHHc,CGGf,AJLsB,CCEH,ADFIjE,CIKjBkE,IAAN,EAAe,MJLD,CAAuB,WAAvB,CAA1B,8BGOmBjE,YAAY,GAAGkB,IAAI,CAACE,WAF9B,4BAE2DF,IAAI,CAACI,EAFhE,mGAG8BJ,IAAI,CAACK,KAHnC,yBAAL;AFFQc,AGGZT,AJLA,AGSC,ADPiB,EEGlBA,CDFA,ADFA,ECT0C,ADWrCC,CDDOQ,ADFNhC,AGWN,CCNK,CAAC2D,CFJN,CAEU,CEEL,CAAL,CACKnC,EHJgB,EGGrB,CACU,EFHAuB,GFHa,GAAGtD,EIMhBgC,CFHS,EAAI,GFHW,CAAC/B,CIMjB,YJNQ,CAAuB,MCEGmB,IAAI,CAACM,EDF/B,CAA1B,CCEqB,UAAT;AACH,AGGS,AJLlB,AEGQ,KDHA,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","file":"main.fb6bbcaf.js","sourceRoot":"..","sourcesContent":["const searchInput = document.querySelector('.search__input');\nconst imageBaseURL = 'https://image.tmdb.org/t/p/w500/';\nconst backdrop_image = 'https://image.tmdb.org/t/p/original/'\n\n// Poster placeholder\nimport posterPlaceholder from '../img/poster_unavailable.jpg';\n\n// HANDLE SEARCH DISPLAY\nexport const displaySearch = (obj) => {\n    const upcomingContainer = document.querySelector('.upcoming');\n    const topRatedContainer = document.querySelector('.top__rated');\n    const output = document.querySelector('.output');\n    const heading = document.querySelector('.search__results--heading');\n    const result = obj.results;\n    const count = obj.total_results;\n\n    // clear container\n    upcomingContainer.classList.add('hideAll');\n    topRatedContainer.classList.add('hideAll');\n\n    if (count === 0) {\n        heading.innerText = 'No results found.';\n    } else {\n        heading.innerText = `${count} results found`;\n    }\n    \n    let movie = '';\n    let tvShows = '';\n\n    result.forEach(item => {\n        if (item.media_type === 'movie') {\n            movie +=`\n            <div class=\"template__wrapper\">\n                <img src=${item.poster_path === null ? posterPlaceholder : imageBaseURL + item.poster_path} data-movie-id=${item.id} class=\"search__movie--poster\" alt=\"\" />\n                <h4 class=\"search__movie--title\">${item.title}</h4>\n            </div>`;\n        } else if (item.media_type === 'tv') {\n            tvShows +=`\n            <div class=\"template__wrapper\">\n                <img src=${item.poster_path === null ? posterPlaceholder : imageBaseURL + item.poster_path} data-movie-id=${item.id} class=\"search__movie--poster\" alt=\"\" />\n                <h4 class=\"search__movie--title\">${item.name}</h4>\n            </div>`;\n        }\n    })\n\n    // Output results\n    output.innerHTML = movie + tvShows;\n\n    // Clear input field\n    searchInput.value = '';\n}","const imageBaseURL = 'https://image.tmdb.org/t/p/w500/';\n\nexport const findById = (id) => {\n    fetch('https://api.themoviedb.org/3/movie/' + id + '?api_key=' + process.env.API_KEY + '&language=en-US')\n        .then(response => response.json())\n        .then(data => {\n            const cardWrapper = document.querySelector('.modal__card');\n            console.log(data);\n            const genres = data.genres;\n            let genreList = '';\n            const releaseDate = data.release_date.split('-');\n            genres.forEach(item => {\n                genreList += `<li class=\"modal__item\">${item.name}</li>`\n            });\n\n           let card = `\n                    <div class=\"modal__poster--container\">\n                        <img src=${imageBaseURL + data.poster_path} alt=\"Poster\" class=\"modal__poster\">\n                    </div>\n                    <div class=\"modal__content\">\n                        <div class=\"modal__title--wrapper\">\n                            <p class=\"modal__rate\"><span class=\"modal__rate--sizeup\"><i class=\"fas fa-star\"></i> ${data.vote_average}</span> / 10</p>\n                            <h1 class=\"modal__title\">${data.title}</h1>\n                            <ul class=\"modal__list\">${genreList}</ul>\n                            <p class=\"modal__releaseDate\">Release date: ${releaseDate[1]}, ${releaseDate[2]}, ${releaseDate[0]}</p>\n                            <p clas=\"modal__runtime\">Duration: ${data.runtime}min</p>\n                        </div>\n                        <div class=\"modal__synopsis--wrapper\">\n                            <h3 class=\"modal__overview--heading\">Synopsis</h3>\n                            <p class=\"modal__overview\">${data.overview}</p>\n                            <a href=\"${data.homepage}\" target=\"_blank\" class=\"modal__button\">Homepage <i class=\"fas fa-long-arrow-alt-right\"></i></a>\n                        </div>\n                    </div>`;\n\n            cardWrapper.innerHTML = card;\n        })\n        .catch(error => error)\n}","const imageBaseURL = 'https://image.tmdb.org/t/p/w500/';\n\nexport const displayUpcomingMovies = (obj) => {\n    const upcoming = document.querySelector('.upcoming__movies');\n    const movie = obj.results[5];\n    const poster = imageBaseURL + movie.poster_path;\n    const title = movie.title;\n    const overview = movie.overview;\n    const movieById_URL = 'https://api.themoviedb.org/3/movie/' + movie.id + '?api_key=' + process.env.API_KEY + '&language=en-US'\n\n    // get current movie info\n    fetch(movieById_URL)\n        .then(response => response.json())\n        .then(movieById => {\n            const genres = movieById.genres; // returns an array\n\n            let moviePoster = `\n                <div class=\"upcoming__card--wrapper\">\n                    <div class=\"upcoming__description\">\n                        <h1 class=\"upcoming__title\">${title}</h1>\n                        <p class=\"upcoming__genre\">${genres[0].name} <span class=\"genre__separator\">|</span> ${genres[1].name}</p>\n                        <div class=\"upcoming__overview\">\n                            <h3 class=\"overview__title\">The <br />Story</h3>\n                            <div>\n                                <p class=\"overview__description\">${overview}</p>\n                                <button type=\"button\" class=\"upcoming__button\">Read more <i class=\"fas fa-long-arrow-alt-right\"></i></button>\n                            </div>\n                        </div>\n                    </div>\n                    <div class=\"upcoming__poster--container\" style=\"background-image: url(${poster});\"></div>\n                </div>\n            `;\n            \n            // Output results\n            upcoming.innerHTML = moviePoster;\n        })\n        .catch(error => error);\n        \n    // fetch(`https://api.themoviedb.org/3/movie/${movie.id}?api_key=${process.env.API_KEY}&language=en-US`)\n    //     .then(response => response.json())\n    //     .then(data => console.log(data))\n\n    \n\n    \n    // let movie = '';\n    // movies.forEach(item => {\n    //     movie +=`\n    //     <div class=\"upcoming__card--wrapper\">\n    //         <div class=\"upcoming__poster--container\">\n    //             <img src=${imageBaseURL + item.poster_path} class=\"upcoming__poster\" alt=\"\" />\n    //         </div>\n    //         <div class=\"upcoming__description\">\n    //             <h1 class=\"upcoming__title\">${item.title}</h1>\n    //             <div>\n    //                 <p class=\"upcoming__story\">Story</p>\n    //                 <p class=\"upcoming__story--description\">${item.overview}</p>\n    //             </div>\n    //         </div>\n    //     </div>`;\n    // })\n}","const imageBaseURL = 'https://image.tmdb.org/t/p/w342/';\n\nexport const displayTopRatedMovies = (obj) => {\n    const topRated = document.querySelector('.top__rated--movies');\n    const topRatedHeading = document.querySelector('.top__rated--heading');\n    const movies = obj.results;\n    \n    // Insert heading\n    topRatedHeading.innerText = 'Top Rated Movies';\n\n\n    // Create movie card\n    let movie = '';\n    movies.forEach(item => {\n        movie +=`\n        <div class=\"top__rated--wrapper\">\n            <img src=${imageBaseURL + item.poster_path} data-movie-id=${item.id} class=\"top__rated--poster\" alt=\"\" />\n            <p class=\"top__rated--title\">${item.title}</p>\n        </div>`;\n    })\n\n    // Output results\n    topRated.innerHTML = movie;\n}","import { displaySearch } from './movieSearch.js';\nimport { findById } from './findById.js';\nimport { displayUpcomingMovies } from './upcomingMovies.js';\nimport { displayTopRatedMovies } from './topRatedMovies.js';\n\nconst searchInput = document.querySelector('.search__input');\nconst searchButton = document.querySelector('.search');\n\nconst api_key = process.env.API_KEY;    \nconst multiSearch_url = 'https://api.themoviedb.org/3/search/multi?api_key=' + api_key + '&include_adult=false';\nconst upcoming_URL = 'https://api.themoviedb.org/3/movie/upcoming?api_key=' + api_key;\nconst topRated_URL = 'https://api.themoviedb.org/3/movie/top_rated?api_key=' + api_key;\n\n// Get data\nconst getData = (url, func) => {\n    fetch(url)\n        .then(response => response.json())\n        .then(data => func(data))\n        .catch(error => {\n            if (error) {\n                console.log(error);\n            }\n        })\n}\n\n//  SEARCH BAR EVENT LISTENERS\nsearchInput.addEventListener('keyup', (e) => {\n\n    if (searchInput.value === '') {\n        false;\n    } else {\n        if (e.keyCode === 13) {\n            searchMovie();\n        }\n    }\n})\n\nsearchButton.addEventListener('click', () => {\n    if (searchInput.value === '') {\n        false;\n    } else {\n        searchMovie();\n    }\n});\n\n// Handle movie search\nconst searchMovie = () => {\n    const value = searchInput.value;\n    const multipleSearch = multiSearch_url + '&query=' + value;\n    getData(multipleSearch, displaySearch);\n}\n\n// Handle upcoming movies\nconst handleUpcomingMovies = () => {\n    getData(upcoming_URL, displayUpcomingMovies);\n}\n\n// Handle top rated movies\nconst handleTopRatedMovies = () => {\n    getData(topRated_URL, displayTopRatedMovies);\n}\n\n// Display movie info on click\nconst handleModal = () => {\n    const modal = document.querySelector('.modal');\n    const modalCard = document.querySelector('.modal__card');\n    const closeModal = document.querySelector('.close__modal i');\n\n    closeModal.addEventListener('click', () => {\n        modalCard.innerHTML = '';\n        modal.classList.remove('isShown');\n    })\n\n    document.addEventListener('click', (e) => {\n        const target = e.target;\n        const movieID = target.dataset.movieId;\n        \n        if (target.tagName.toLowerCase() === 'img') {\n            modal.classList.add('isShown');\n            findById(movieID);\n        }\n    })\n}\n\nhandleModal();\nhandleUpcomingMovies();\nhandleTopRatedMovies();"]}