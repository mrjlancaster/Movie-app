{"version":3,"sources":["js/movieSearch.js","js/findById.js","js/upcomingMovies.js","js/topRatedMovies.js","js/main.js"],"names":["searchInput","document","querySelector","imageBaseURL","backdrop_image","displaySearch","obj","topRatedContainer","output","heading","result","results","count","total_results","classList","add","innerText","movie","tvShows","forEach","item","media_type","poster_path","posterPlaceholder","id","title","name","innerHTML","value","month","findById","fetch","then","response","json","data","cardWrapper","console","log","genres","releaseDate","release_date","split","genreList","card","vote_average","runtime","overview","homepage","catch","error","displayUpcomingMovies","upcoming","poster","movieById_URL","movieById","moviePoster","displayTopRatedMovies","topRated","topRatedHeading","movies","searchButton","api_key","multiSearch_url","upcoming_URL","topRated_URL","getData","url","func","addEventListener","e","keyCode","searchMovie","multipleSearch","handleUpcomingMovies","handleTopRatedMovies","handleModal","modal","modalCard","closeModal","remove","target","movieID","dataset","movieId","tagName","toLowerCase"],"mappings":";;AIAA;;AACA;;AHDA,AGEA,ADFA,ADAA,IDAMG,AEAAA,ADAAA,YDAY,AEAA,ADAA,GDAG,AEAA,ADAA,kCDArB,AEAA,ADAA;ADCA,ADIA,ICJM0B,KAAK,GAAG,CAAC,KAAD,EAAQ,KAAR,EAAe,OAAf,EAAwB,OAAxB,EAAiC,KAAjC,EAAwC,MAAxC,EAAgD,MAAhD,EAAwD,KAAxD,EAA+D,MAA/D,EAAuE,KAAvE,EAA8E,KAA9E,EAAqF,KAArF,CAAd;AGEA,ADDO,ADAA,ICAM4B,ADAAN,qBCAqB,ADAA,GCAG,ADAA,SCAxBM,ADAAN,qBCAwB,ADAA,CCAC7C,ADAAA,GCAD,ADAA,ECAS,ADAA;ADCvC,AEAH,ADAA,IDASwB,EEAH4B,ADAAN,MDAW,EEAH,ADAA,CDAM,EEAHnD,ADAAA,ODAR6B,CEAgB,ADAA,CCAC5B,ADAAA,MDAN,CAACsB,EAAD,EAAQ,EEAX,ADAA,CCAuB,ADAA,mBAAvB,CAAjB,CCAiB,CAAjB;AFCAO,AGCJ,ADDI,ADAA,EDAAA,EGCE/B,EDDI2D,ADAA1C,CDAD,CAAC,GCAK,GAAGX,CECD,EFDI,CECDL,AFDEU,GCAG,GAAGV,CDAV,CECU,AFDE,CECDC,AFDX,CAAd,ICAgC,CAACA,OCCjB,CAAuB,KDDf,CAAuB,CFADsB,EAAxC,GAA6C,IGCnC,CAApB,MHDU,KEAkB,CAAxB,kCFAuF,iBAAlF,CAAL,CACKQ,IADL,CACU,UAAAC,QAAQ;AAAA,AGCtB,AJNA,AGKI,ADAA,IECE4B,AJNA7D,EGKI4D,ADAAP,KDAgBpB,CEAV,ADAA,GFLC,AGKE3B,ADAAH,CECD,EJNEF,AGKE,CFAY,AGCbA,ADDEU,CFAYuB,IAAT,EAAJ,ADLM,AGKxB,CCCyB,AJNAhC,AGEiB,ADGf,CECDA,ADC1B,EDF8Be,KAAK,CAACK,IFLpB,CIMC,AJNsB,CIMC,KFDxC,IECiB,CAArB,KJNoB,CAApB;ACKsB,AGGtB,AJPA,AEKI,GDFA,CGIEwC,AJPA3D,CCKG6B,CCACP,GDFN,CAEU,CGED,AFFE,GAAGR,EFLA,GAAG,AEKE,CDATkB,ACAUV,IDAN,CCAd,CDAkB,sBGEtB,KJPA;ACMY,AGEZ,AJPA,AGMIkC,ADDA,ECCAA,ECCEI,AJPA3D,EEKI2C,EDAQX,MCAA,GCCC,ADDEnB,CFLD,AGMAD,CFDS,AGER,EJPE,CCKSf,AGER,AFFE,CAAC8C,ICCvB,GFDoC,AECR,CFDS7C,ACArC,aDA4B,CAAuB,GECnD,CAN0C,CAS1C,SFJ4B,ADLhC,CCKY,CDHZ,gBIK+E4D,OAAvD,GAAiE,sBAAzF;AHDYzB,AGEZ,AFFI,IDAQA,AGEN2B,EFFIV,KDAS,CAAChB,GAAR,CAAYH,AGEN,GAAG,AFFE,CDAX,ECAc,wCAAwClB,KAAK,CAACO,EAA9C,GAAmD,GEECsC,OAA9E,CFF0B,wCAAuF,iBAA7G,CAN0C,CAQ1C;ADDQ,AGEZ,AJJA,AGKI,ICDEG,EDCEhD,EFHUsB,GEGL,GFHW,AEGR,ECDE,ADCd,CFHuBJ,EGEN,EHFU,CAACI,MAApB,iDGEmEuB,OAA/E,EAEA;AHHY,ADFL,AGKHF,ADFA7B,ECEA6B,ADFA7B,EFHS1B,GEGJ,CDDSmC,AEGR,ADFAc,CCECnC,OAAP,CHLsB,AGKP,EFHU,CDFA,CEGpB,CDDuBgB,ACC5B,CACKH,GDF2B,CAACS,AEGlBrB,ADFf,CACU,CFJDf,EGKU,EAAI,KDDb4B,CDFkB,CAAkBS,EDFrB,CAACpC,ECEE,CAAwB,ADF3B,AEIP,EFJgB,CCEN,CAApB;AAEA,AGEZ,AJLI,AGKIW,ADFc,IEEhBiD,ADAEjD,EHLEV,ECGMoC,CEEH,ECAA,AFFaV,GEEV,GHFS,ECAS,CDAN,ACAOC,EDAvB,CGENgC,AJLqB,CEGD,EFHIjE,AEGR,IEEN,CAACkE,GAAD,AJLsB,CAACjE,CIKjBkE,IAAN,EAAe,MJLD,CAAuB,aAAvB,CAA1B,4BGOmBjE,YAAY,GAAGiB,IAAI,CAACE,WAF9B,4BAE2DF,IAAI,CAACI,EAFhE,mGAG8BJ,IAAI,CAACK,KAHnC,yBAAL;AFDIc,AGERR,AJLA,AGSC,ADPiB,EEGlBA,CDFA,ADFA,CDEQQ,CEXkC,ADWrCP,CFHCxB,AGWN,CCNK,CAAC2D,CFJN,CDEc,ACAJ,CDAKhD,AGEV,CAAL,AJLY,CIMPa,EJNU/B,EIKf,CHFQ,AG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","file":"main.fb6bbcaf.js","sourceRoot":"..","sourcesContent":["const searchInput = document.querySelector('.search__input');\r\nconst imageBaseURL = 'https://image.tmdb.org/t/p/w500/';\r\nconst backdrop_image = 'https://image.tmdb.org/t/p/original/'\r\n\r\n// Poster placeholder\r\nimport posterPlaceholder from '../img/poster_unavailable.jpg';\r\n\r\n// HANDLE SEARCH DISPLAY\r\nexport const displaySearch = (obj) => {\r\n    const topRatedContainer = document.querySelector('.top__rated');\r\n    const output = document.querySelector('.output');\r\n    const heading = document.querySelector('.search__results--heading');\r\n    const result = obj.results;\r\n    const count = obj.total_results;\r\n\r\n    // clear top rated container\r\n    topRatedContainer.classList.add('hideAll');\r\n\r\n    if (count === 0) {\r\n        heading.innerText = 'No results found.';\r\n    } else {\r\n        heading.innerText = `${count} results found`;\r\n    }\r\n    \r\n    let movie = '';\r\n    let tvShows = '';\r\n\r\n    result.forEach(item => {\r\n        if (item.media_type === 'movie') {\r\n            movie +=`\r\n            <div class=\"template__wrapper\">\r\n                <img src=${item.poster_path === null ? posterPlaceholder : imageBaseURL + item.poster_path} data-movie-id=${item.id} class=\"search__movie--poster\" alt=\"\" />\r\n                <h4 class=\"search__movie--title\">${item.title}</h4>\r\n            </div>`;\r\n        } else if (item.media_type === 'tv') {\r\n            tvShows +=`\r\n            <div class=\"template__wrapper\">\r\n                <img src=${item.poster_path === null ? posterPlaceholder : imageBaseURL + item.poster_path} data-movie-id=${item.id} class=\"search__movie--poster\" alt=\"\" />\r\n                <h4 class=\"search__movie--title\">${item.name}</h4>\r\n            </div>`;\r\n        }\r\n    })\r\n\r\n    // Output results\r\n    output.innerHTML = movie + tvShows;\r\n\r\n    // Clear input field\r\n    searchInput.value = '';\r\n}","const imageBaseURL = 'https://image.tmdb.org/t/p/w500/';\r\nconst month = ['Jan', 'Feb', 'March', 'April', 'May', 'June', 'July', 'Aug', 'Sept', 'Oct', 'Nov', 'Dec'];\r\n\r\nexport const findById = (id) => {\r\n    fetch('https://api.themoviedb.org/3/movie/' + id + '?api_key=' + process.env.API_KEY + '&language=en-US')\r\n        .then(response => response.json())\r\n        .then(data => {\r\n            const cardWrapper = document.querySelector('.modal__card');\r\n            console.log(data);\r\n            const genres = data.genres;\r\n            const releaseDate = data.release_date.split('-');\r\n\r\n            let genreList = '';\r\n            genres.forEach(item => {\r\n                genreList += `<li class=\"modal__item\">${item.name}</li>`\r\n            });\r\n\r\n           let card = `\r\n                    <div class=\"modal__poster--container\">\r\n                        <img src=${imageBaseURL + data.poster_path} alt=\"Poster\" class=\"modal__poster\">\r\n                    </div>\r\n                    <div class=\"modal__content\">\r\n                        <div class=\"modal__title--wrapper\">\r\n                            <p class=\"modal__rate\"><span class=\"modal__rate--sizeup\"><i class=\"fas fa-star\"></i> ${data.vote_average}</span> / 10</p>\r\n                            <h1 class=\"modal__title\">${data.title}</h1>\r\n                            <ul class=\"modal__list\">${genreList}</ul>\r\n                            <p class=\"modal__releaseDate\">Release date: ${releaseDate[1]}, ${releaseDate[2]}, ${releaseDate[0]}</p>\r\n                            <p clas=\"modal__runtime\">Duration: ${data.runtime}min</p>\r\n                        </div>\r\n                        <div class=\"modal__synopsis--wrapper\">\r\n                            <h3 class=\"modal__overview--heading\">Synopsis</h3>\r\n                            <p class=\"modal__overview\">${data.overview}</p>\r\n                            <a href=\"${data.homepage}\" target=\"_blank\" class=\"modal__button\">Homepage <i class=\"fas fa-long-arrow-alt-right\"></i></a>\r\n                        </div>\r\n                    </div>`;\r\n\r\n            cardWrapper.innerHTML = card;\r\n        })\r\n        .catch(error => error)\r\n}","const imageBaseURL = 'https://image.tmdb.org/t/p/w500/';\r\n\r\nexport const displayUpcomingMovies = (obj) => {\r\n    const upcoming = document.querySelector('.upcoming__movies');\r\n    const movie = obj.results[5];\r\n    const poster = imageBaseURL + movie.poster_path;\r\n    const title = movie.title;\r\n    const overview = movie.overview;\r\n    const movieById_URL = 'https://api.themoviedb.org/3/movie/' + movie.id + '?api_key=' + process.env.API_KEY + '&language=en-US'\r\n\r\n    // get current movie info\r\n    fetch(movieById_URL)\r\n        .then(response => response.json())\r\n        .then(movieById => {\r\n            const genres = movieById.genres; // returns an array\r\n\r\n            let moviePoster = `\r\n                <div class=\"upcoming__card--wrapper\">\r\n                    <div class=\"upcoming__description\">\r\n                        <h1 class=\"upcoming__title\">${title}</h1>\r\n                        <p class=\"upcoming__genre\">${genres[0].name} <span class=\"genre__separator\">|</span> ${genres[1].name}</p>\r\n                        <div class=\"upcoming__overview\">\r\n                            <h3 class=\"overview__title\">The <br />Story</h3>\r\n                            <div>\r\n                                <p class=\"overview__description\">${overview}</p>\r\n                                <button type=\"button\" class=\"upcoming__button\">Read more <i class=\"fas fa-long-arrow-alt-right\"></i></button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"upcoming__poster--container\" style=\"background-image: url(${poster});\"></div>\r\n                </div>\r\n            `;\r\n            \r\n            // Output results\r\n            upcoming.innerHTML = moviePoster;\r\n        })\r\n        .catch(error => error);\r\n        \r\n    // fetch(`https://api.themoviedb.org/3/movie/${movie.id}?api_key=${process.env.API_KEY}&language=en-US`)\r\n    //     .then(response => response.json())\r\n    //     .then(data => console.log(data))\r\n\r\n    \r\n\r\n    \r\n    // let movie = '';\r\n    // movies.forEach(item => {\r\n    //     movie +=`\r\n    //     <div class=\"upcoming__card--wrapper\">\r\n    //         <div class=\"upcoming__poster--container\">\r\n    //             <img src=${imageBaseURL + item.poster_path} class=\"upcoming__poster\" alt=\"\" />\r\n    //         </div>\r\n    //         <div class=\"upcoming__description\">\r\n    //             <h1 class=\"upcoming__title\">${item.title}</h1>\r\n    //             <div>\r\n    //                 <p class=\"upcoming__story\">Story</p>\r\n    //                 <p class=\"upcoming__story--description\">${item.overview}</p>\r\n    //             </div>\r\n    //         </div>\r\n    //     </div>`;\r\n    // })\r\n}","const imageBaseURL = 'https://image.tmdb.org/t/p/w342/';\r\n\r\nexport const displayTopRatedMovies = (obj) => {\r\n    const topRated = document.querySelector('.top__rated--movies');\r\n    const topRatedHeading = document.querySelector('.top__rated--heading');\r\n    const movies = obj.results;\r\n    \r\n    // Insert heading\r\n    topRatedHeading.innerText = 'Top Rated Movies';\r\n\r\n\r\n    // Create movie card\r\n    let movie = '';\r\n    movies.forEach(item => {\r\n        movie +=`\r\n        <div class=\"top__rated--wrapper\">\r\n            <img src=${imageBaseURL + item.poster_path} data-movie-id=${item.id} class=\"top__rated--poster\" alt=\"\" />\r\n            <p class=\"top__rated--title\">${item.title}</p>\r\n        </div>`;\r\n    })\r\n\r\n    // Output results\r\n    topRated.innerHTML = movie;\r\n}","import { displaySearch } from './movieSearch.js';\r\nimport { findById } from './findById.js';\r\nimport { displayUpcomingMovies } from './upcomingMovies.js';\r\nimport { displayTopRatedMovies } from './topRatedMovies.js';\r\n\r\nconst searchInput = document.querySelector('.search__input');\r\nconst searchButton = document.querySelector('.search');\r\n\r\nconst api_key = process.env.API_KEY;    \r\nconst multiSearch_url = 'https://api.themoviedb.org/3/search/multi?api_key=' + api_key + '&include_adult=false';\r\nconst upcoming_URL = 'https://api.themoviedb.org/3/movie/upcoming?api_key=' + api_key;\r\nconst topRated_URL = 'https://api.themoviedb.org/3/movie/top_rated?api_key=' + api_key;\r\n\r\n// Get data\r\nconst getData = (url, func) => {\r\n    fetch(url)\r\n        .then(response => response.json())\r\n        .then(data => func(data))\r\n        .catch(error => {\r\n            if (error) {\r\n                console.log(error);\r\n            }\r\n        })\r\n}\r\n\r\n//  SEARCH BAR EVENT LISTENERS\r\nsearchInput.addEventListener('keyup', (e) => {\r\n\r\n    if (searchInput.value === '') {\r\n        false;\r\n    } else {\r\n        if (e.keyCode === 13) {\r\n            searchMovie();\r\n        }\r\n    }\r\n})\r\n\r\nsearchButton.addEventListener('click', () => {\r\n    if (searchInput.value === '') {\r\n        false;\r\n    } else {\r\n        searchMovie();\r\n    }\r\n});\r\n\r\n// Handle movie search\r\nconst searchMovie = () => {\r\n    const value = searchInput.value;\r\n    const multipleSearch = multiSearch_url + '&query=' + value;\r\n    getData(multipleSearch, displaySearch);\r\n}\r\n\r\n// Handle upcoming movies\r\nconst handleUpcomingMovies = () => {\r\n    getData(upcoming_URL, displayUpcomingMovies);\r\n}\r\n\r\n// Handle top rated movies\r\nconst handleTopRatedMovies = () => {\r\n    getData(topRated_URL, displayTopRatedMovies);\r\n}\r\n\r\n// Display movie info on click\r\nconst handleModal = () => {\r\n    const modal = document.querySelector('.modal');\r\n    const modalCard = document.querySelector('.modal__card');\r\n    const closeModal = document.querySelector('.close__modal');\r\n\r\n    closeModal.addEventListener('click', () => {\r\n        modalCard.innerHTML = '';\r\n        modal.classList.remove('isShown');\r\n    })\r\n\r\n    document.addEventListener('click', (e) => {\r\n        const target = e.target;\r\n        const movieID = target.dataset.movieId;\r\n        \r\n        if (target.tagName.toLowerCase() === 'img') {\r\n            modal.classList.add('isShown');\r\n            findById(movieID);\r\n        }\r\n    })\r\n}\r\n\r\nhandleModal();\r\nhandleUpcomingMovies();\r\nhandleTopRatedMovies();"]}