{"version":3,"sources":["js/movieSearch.js","js/findById.js","js/upcomingMovies.js","js/topRatedMovies.js","js/main.js"],"names":["searchInput","document","querySelector","imageBaseURL","backdrop_image","displaySearch","obj","upcomingContainer","topRatedContainer","output","heading","result","results","count","total_results","classList","add","innerText","movie","tvShows","forEach","item","media_type","poster_path","posterPlaceholder","id","title","name","innerHTML","value","findById","fetch","then","response","json","data","console","log","catch","error","displayUpcomingMovies","upcoming","poster","overview","movieById_URL","movieById","genres","moviePoster","displayTopRatedMovies","topRated","topRatedHeading","movies","searchButton","api_key","multiSearch_url","upcoming_URL","topRated_URL","getData","url","func","addEventListener","e","keyCode","searchMovie","multipleSearch","handleUpcomingMovies","handleTopRatedMovies","handleModal","modal","closeModal","remove","target","movieID","dataset","movieId","tagName","toLowerCase"],"mappings":";;AIAA;;AACA;;AACA,ADFA,ADAA,ICAMG,ADAAA,YCAY,ADAA,GCAG,ADAA,kCCArB,ADAA;ADAO,ADKP,ICLa2B,QAAQ,GAAG,SAAXA,QAAW,CAACL,EAAD,EAAQ;AAC5BM,AGEJ,ADDO,ADAA,EDDHA,EECSiB,ADAAR,GDDJ,CAAC,iBECwB,ADAA,GCAG,ADAA,SCAxBQ,ADAAR,WDDqCf,EAAxC,GAA6C,KEClB,ADAA,CCACnB,ADAAA,GCAD,ADAA,EDD3B,AECoC,ADAA,wCDD6C,iBAAlF,CAAL,CACK0B,IADL,CACU,UAAAC,QAAQ;AAAA,AEClB,ADAA,MCAMgB,ADAAR,KDDgBR,GECR,ADAA,GCAGhC,ADAAA,EDDa,CAACiC,IAAT,CECG,ADAA,CDDP,AECQhC,ADAAA,aCAT,ADAA,CCAuB,ADAA,mBAAvB,CAAjB,CCAiB,CAAjB;AFDkB,AGGtB,ADDI,ADAA,GDHA,CGIEF,CHFGgC,CECCkB,ADAAhC,GDHN,CAEU,CCCC,GAAGZ,CECD,EFDI,CECDL,AFDEW,EDDRuB,CECW,GFDP,AECUlC,CDAV,CECU,AFDE,CECDC,AFDX,CAAd,ICAgC,CAACA,OCCjB,CAAuB,KDDf,CAAuB,UCC/B,CAApB,WDD4B,CAAxB;AFDc,AGGlB,AJNA,AGKI,ADAA,IECEkD,AJNApD,EGKImD,ADAAT,KDFYN,CEEN,ADAA,GFLC,AGKE9B,ADAAH,CECD,EHHW,ADHTF,AGKE,CFFQoC,AGGTpC,ADDEW,GFFD,CAAYuB,GDHN,AGKxB,CFFkB,AGGO,AJNAjC,AGEiB,ADGf,CDFb,AGGYA,ADC1B,EDF8BgB,KAAK,CAACK,IFLpB,CIMC,AJNsB,CIMC,KFDxC,IECiB,CAArB,KJNoB,CAApB;ACGkB,AGKlB,AJPA,AEKI,GDLA,CGOE8B,AJPAlD,CCGGmC,CCECZ,IDLN,CAGW,AGIF,AFFE,GAAGR,EFLA,GAAG,AEKE,CAACQ,CDFTa,ICEX,CDFgB,sBGIpB,KJPA;ACGoB,AGKpB,AJPA,AGMIW,ADDA,ECCAA,ECCEI,AJPAlD,EEKIuC,KDHcJ,GCGN,EDHE,CEID,ADDErB,CFLD,AGMAD,CCCC,EJPE,CIOC,AFFE,CAAC0B,ICCvB,GAA4B,CDD5B,iBCCA,CAN0C,CAS1C,SHTJ,EAEA,gBIK+EU,OAAvD,GAAiE,sBAAzF;AHLoB,AGMpB,AFFI,GDPA,CGSEE,EFFIX,UEEQ,GAAG,AFFE,GAAG,wCAAwC1B,KAAK,CAACO,EAA9C,GAAmD,GEEC4B,OAA9E,CFF0B,wCAAuF,iBAA7G,CAN0C,CAQ1C;ADLH,AGMD,AJJA,AGKI,CFZG,GGWDG,EDCEtC,KAAK,GAAG,ECDE,ADCd,GCDiB,0DAA0DmC,OAA/E,EAEA;AJLO,AGKHF,ADFApB,ECEAoB,ADFApB,EFHS1B,GEGJ,CCEC,ADFAuC,CCECxB,OAAP,CHLsB,AGKP,GHLU,CEGpB,CAAL,CACKY,ICCUX,ADFf,CACU,CFJDhB,EGKU,EAAI,KDDb4B,IFJe,CAAC3B,GAAD,AEIP,EFJgB;AIMtC,AJLI,AGKIY,ADFc,IEEhBuC,ADAEvC,EHLEX,GGKG,ECAA,AFFa0B,GEEV,KFFkB,CAACC,GEE7BuB,AJLqB,CEGD,EFHIxD,AEGR,IEEN,CAACyD,GAAD,AJLsB,CAACxD,CIKjByD,IAAN,EAAe,MJLD,CAAuB,WAAvB,CAA1B,8BGOmBxD,YAAY,GAAGkB,IAAI,CAACE,WAF9B,4BAE2DF,IAAI,CAACI,EAFhE,mGAG8BJ,IAAI,CAACK,KAHnC,yBAAL;ACCJK,AJLA,AGSC,ADPiB,EEGlBA,CDFA,ADFA,ECT0C,ADWrCC,CFHCxB,AGWN,CCNK,CAACkD,CFJN,CAEU,CEEL,CAAL,CACK1B,IADL,CACU,EFHAa,GFHa,GAAG5C,EIMhBgC,CFHS,EAAI,GFHW,CAAC/B,CIMjB,YJNQ,CAAuB,aAAvB,CAA1B;AIMkB,AJLlB,AEGQ,MFHFO,EEGQqC,GEEQb,CJLV,EEGQ,CFHLhC,EEGQ4C,EEEO,CAACX,GJLR,CIKD,AJLEhC,EIKN,AFFc,CAAC4C,MAAzB,CADe,CACkB,EFH1B,CAAuB,SAAvB,CAAf;AIKkB,AJJlB,AGUAG,EAAAA,CCPA,EAEKjB,CJLCtB,GIGN,CAEU,ADKF,CAACkB,EHVI,GAAG3B,IIKNkC,ADKV,GAAqBjB,CCLP,AJLU,CAAChB,GGUzB,UHVgB,CAAuB,2BAAvB,CAAhB;AIKc,AJJd,AGUH,ADPW,CCdL,KHWGS,EEGMoC,GECMY,CJJN,GIIU,AJJPrD,CIIQ6B,EJJL,CAACvB,AEGI,CECD,CAAR,KJJd,kLEMkDc,KAH3B,yEAI0BoB,MAAM,CAAC,CAAD,CAAN,CAAUnB,IAJpC,wDAIoFmB,MAAM,CAAC,CAAD,CAAN,CAAUnB,IAJ9F,qQAQwCgB,QARxC,qWAaiED,MAbjE,sDAAf,CAHe,CAoBf;AEhBM,AJHd,GICA,EAGKJ,CJJCzB,IICN,CAGW,AJJA,GAAGP,GAAG,CAACQ,GIIPyB,KAAK,EAAI,GJJpB,CANkC,CAQlC;AIGQ,AFeAE,IAAAA,IEfIF,IFeI,CEfR,AFeSX,EEfE,OFeX,GAAqBmB,WAArB;AEdIX,AJHZ7B,AEkBK,EFlBLA,CENA,EAyBK+B,CEhBOF,IFTZ,CAyBW,EEhBQ,CAACC,GAAR,CAAYE,CJHP,CAACxB,CEmBPwB,EEhBC,GFgBI,GFnBhB,CAA4BvB,GAA5B,CAAgC,SAAhC;AIIS,AJHTR,AEkBgB,EFlBhBA,SEkBoB+B,KAAJ,GFlBC,CAACxB,SAAlB,CAA4BC,GAA5B,CAAgC,SAAhC;AIIK,AFcW,GErBhB,AFJA,EAT0C,CAoC1C;AEfH,AJHG,AEmBA,CEzBJ,EAWA,GJLQH,KAAK,KAAK,CAAd,EAAiB;AACbH,AEmBJ,IFnBIA,OAAO,CAACO,SAAR,GAAoB,mBAApB;AACH,AEuBD,GFzBA,MAEO;AIIXjB,AJHQU,AEuBJ,IFvBIA,OIGG,AJHI,CIGHkD,AJHI3C,SAAR,OIGR,CAA6B,KJHEJ,EIG/B,EAAsC,CJH9B,SIG+BgD,CAAD,EAAO;AAEzC,AJJC,AEuBD,MEnBI7D,WAAW,CAAC6B,KAAZ,KAAsB,EAA1B,EAA8B;AAC1B,AFmBJ;AElBC,AJJD,AEuBA,GErBA,GJFIX,GIIG,EJJE,GAAG,EAAZ;AIKI,AJJJ,AEuBA,MFvBIC,EIII0C,CAAC,CAACC,GJJC,GAAG,CIIN,CJJR,IIIsB,EAAlB,EAAsB;AAClBC,AJHRpD,AEsBA,EFtBAA,IIGQoD,EJHF,CAAC3C,OAAP,CIGmB,AJHJ,UAAAC,IAAI,EAAI;AIIlB,AJHD,AEsBJ,QFtBQA,IAAI,CAACC,UAAL,KAAoB,OAAxB,EAAiC;AIIpC,AJHOJ,AEsBR,MFtBQA,KAAK,wFAEUG,IAAI,CAACE,WAAL,KAAqB,IAArB,GAA4BC,2BAA5B,GAAgDrB,YAAY,GAAGkB,IAAI,CAACE,WAF9E,4BAE2GF,IAAI,CAACI,EAFhH,8GAGkCJ,IAAI,CAACK,KAHvC,8BAAL;AIIX,AJCQ,AEkBL,CE5BJ,IJIQ,MAMO,IAAIL,IAAI,CAACC,UAAL,KAAoB,IAAxB,EAA8B;AIC7C8B,AJAYjC,AEkBR,MFlBQA,MIAA,CAACyC,AJAM,gBIAnB,CAA8B,OAA9B,EAAuC,YAAM,kDJElBvC,IAAI,CAACE,WAAL,KAAqB,IAArB,GAA4BC,2BAA5B,GAAgDrB,YAAY,GAAGkB,IAAI,CAACE,WAF5E,4BAEyGF,IAAI,CAACI,EAF9G,8GAGgCJ,IAAI,CAACM,IAHrC,8BAAP;AICR,AJIK,AEcL,MElBI3B,WAAW,CAAC6B,KAAZ,KAAsB,EAA1B,EAA8B;AAC1B,AJIH,AEcD,GF5BA,EArBkC,CAqClC;AILC,AFkBD,GEpBA,MAEO;AACHkC,AJKJtD,AEaA,EFbAA,EILIsD,IJKE,CAACnC,MILQ,GJKf,GAAmBV,KAAK,GAAGC,OAA3B,CAtCkC,CAwClC;AINC,AFkBD;AEjBH,AJMGnB,AEYH,CExBD,AFnCO,CF+CHA,EIJJ,SJIe,CAAC6B,KAAZ,GAAoB,EAApB;AACH,CA1CM;AIsCP,IAAMkC,WAAW,GAAG,SAAdA,WAAc,GAAM;AACtB,MAAMlC,KAAK,GAAG7B,WAAW,CAAC6B,KAA1B;AACA,MAAMmC,cAAc,GAAGV,eAAe,GAAG,SAAlB,GAA8BzB,KAArD;AACA4B,EAAAA,OAAO,CAACO,cAAD,EAAiB3D,0BAAjB,CAAP;AACH,CAJD,EAMA;;;AACA,IAAM4D,oBAAoB,GAAG,SAAvBA,oBAAuB,GAAM;AAC/BR,EAAAA,OAAO,CAACF,YAAD,EAAef,qCAAf,CAAP;AACH,CAFD,EAIA;;;AACA,IAAM0B,oBAAoB,GAAG,SAAvBA,oBAAuB,GAAM;AAC/BT,EAAAA,OAAO,CAACD,YAAD,EAAeR,qCAAf,CAAP;AACH,CAFD,EAIA;;;AACA,IAAMmB,WAAW,GAAG,SAAdA,WAAc,GAAM;AACtB,MAAMC,KAAK,GAAGnE,QAAQ,CAACC,aAAT,CAAuB,QAAvB,CAAd;AACA,MAAMmE,UAAU,GAAGpE,QAAQ,CAACC,aAAT,CAAuB,iBAAvB,CAAnB;AAEAmE,EAAAA,UAAU,CAACT,gBAAX,CAA4B,OAA5B,EAAqC,YAAM;AACvC,QAAIQ,KAAJ,EAAW;AACPA,MAAAA,KAAK,CAACrD,SAAN,CAAgBuD,MAAhB,CAAuB,SAAvB;AACH;AACJ,GAJD;AAMArE,EAAAA,QAAQ,CAAC2D,gBAAT,CAA0B,OAA1B,EAAmC,UAACC,CAAD,EAAO;AACtC,QAAMU,MAAM,GAAGV,CAAC,CAACU,MAAjB;AACA,QAAMC,OAAO,GAAGD,MAAM,CAACE,OAAP,CAAeC,OAA/B;;AAEA,QAAIH,MAAM,CAACI,OAAP,CAAeC,WAAf,OAAiC,KAArC,EAA4C;AACxCR,MAAAA,KAAK,CAACrD,SAAN,CAAgBC,GAAhB,CAAoB,SAApB;AACA,8BAASwD,OAAT;AACH;AACJ,GARD;AASH,CAnBD;;AAqBAL,WAAW;AACXF,oBAAoB;AACpBC,oBAAoB","file":"main.fb6bbcaf.js","sourceRoot":"..","sourcesContent":["const searchInput = document.querySelector('.search__input');\nconst imageBaseURL = 'https://image.tmdb.org/t/p/w500/';\nconst backdrop_image = 'https://image.tmdb.org/t/p/original/'\n\n// Poster placeholder\nimport posterPlaceholder from '../img/poster_unavailable.jpg';\n\n// HANDLE SEARCH DISPLAY\nexport const displaySearch = (obj) => {\n    const upcomingContainer = document.querySelector('.upcoming');\n    const topRatedContainer = document.querySelector('.top__rated');\n    const output = document.querySelector('.output');\n    const heading = document.querySelector('.search__results--heading');\n    const result = obj.results;\n    const count = obj.total_results;\n\n    // clear container\n    upcomingContainer.classList.add('hideAll');\n    topRatedContainer.classList.add('hideAll');\n\n    if (count === 0) {\n        heading.innerText = 'No results found.';\n    } else {\n        heading.innerText = `${count} results found`;\n    }\n    \n    let movie = '';\n    let tvShows = '';\n\n    result.forEach(item => {\n        if (item.media_type === 'movie') {\n            movie +=`\n            <div class=\"template__wrapper\">\n                <img src=${item.poster_path === null ? posterPlaceholder : imageBaseURL + item.poster_path} data-movie-id=${item.id} class=\"search__movie--poster\" alt=\"\" />\n                <h4 class=\"search__movie--title\">${item.title}</h4>\n            </div>`;\n        } else if (item.media_type === 'tv') {\n            tvShows +=`\n            <div class=\"template__wrapper\">\n                <img src=${item.poster_path === null ? posterPlaceholder : imageBaseURL + item.poster_path} data-movie-id=${item.id} class=\"search__movie--poster\" alt=\"\" />\n                <h4 class=\"search__movie--title\">${item.name}</h4>\n            </div>`;\n        }\n    })\n\n    // Output results\n    output.innerHTML = movie + tvShows;\n\n    // Clear input field\n    searchInput.value = '';\n}","export const findById = (id) => {\n    fetch('https://api.themoviedb.org/3/movie/' + id + '?api_key=' + process.env.API_KEY + '&language=en-US')\n        .then(response => response.json())\n        .then(data => console.log(data))\n        .catch(error => error)\n}","const imageBaseURL = 'https://image.tmdb.org/t/p/w500/';\n\nexport const displayUpcomingMovies = (obj) => {\n    const upcoming = document.querySelector('.upcoming__movies');\n    const movie = obj.results[5];\n    const poster = imageBaseURL + movie.poster_path;\n    const title = movie.title;\n    const overview = movie.overview;\n    const movieById_URL = 'https://api.themoviedb.org/3/movie/' + movie.id + '?api_key=' + process.env.API_KEY + '&language=en-US'\n\n    // get current movie info\n    fetch(movieById_URL)\n        .then(response => response.json())\n        .then(movieById => {\n            const genres = movieById.genres; // returns an array\n\n            let moviePoster = `\n                <div class=\"upcoming__card--wrapper\">\n                    <div class=\"upcoming__description\">\n                        <h1 class=\"upcoming__title\">${title}</h1>\n                        <p class=\"upcoming__genre\">${genres[0].name} <span class=\"genre__separator\">|</span> ${genres[1].name}</p>\n                        <div class=\"upcoming__overview\">\n                            <h3 class=\"overview__title\">The <br />Story</h3>\n                            <div>\n                                <p class=\"overview__description\">${overview}</p>\n                                <button type=\"button\" class=\"upcoming__button\">Read more <i class=\"fas fa-long-arrow-alt-right\"></i></button>\n                            </div>\n                        </div>\n                    </div>\n                    <div class=\"upcoming__poster--container\" style=\"background-image: url(${poster});\"></div>\n                </div>\n            `;\n            \n            // Output results\n            upcoming.innerHTML = moviePoster;\n        })\n        .catch(error => error);\n        \n    // fetch(`https://api.themoviedb.org/3/movie/${movie.id}?api_key=${process.env.API_KEY}&language=en-US`)\n    //     .then(response => response.json())\n    //     .then(data => console.log(data))\n\n    \n\n    \n    // let movie = '';\n    // movies.forEach(item => {\n    //     movie +=`\n    //     <div class=\"upcoming__card--wrapper\">\n    //         <div class=\"upcoming__poster--container\">\n    //             <img src=${imageBaseURL + item.poster_path} class=\"upcoming__poster\" alt=\"\" />\n    //         </div>\n    //         <div class=\"upcoming__description\">\n    //             <h1 class=\"upcoming__title\">${item.title}</h1>\n    //             <div>\n    //                 <p class=\"upcoming__story\">Story</p>\n    //                 <p class=\"upcoming__story--description\">${item.overview}</p>\n    //             </div>\n    //         </div>\n    //     </div>`;\n    // })\n}","const imageBaseURL = 'https://image.tmdb.org/t/p/w342/';\n\nexport const displayTopRatedMovies = (obj) => {\n    const topRated = document.querySelector('.top__rated--movies');\n    const topRatedHeading = document.querySelector('.top__rated--heading');\n    const movies = obj.results;\n    \n    // Insert heading\n    topRatedHeading.innerText = 'Top Rated Movies';\n\n\n    // Create movie card\n    let movie = '';\n    movies.forEach(item => {\n        movie +=`\n        <div class=\"top__rated--wrapper\">\n            <img src=${imageBaseURL + item.poster_path} data-movie-id=${item.id} class=\"top__rated--poster\" alt=\"\" />\n            <p class=\"top__rated--title\">${item.title}</p>\n        </div>`;\n    })\n\n    // Output results\n    topRated.innerHTML = movie;\n}","import { displaySearch } from './movieSearch.js';\nimport { findById } from './findById.js';\nimport { displayUpcomingMovies } from './upcomingMovies.js';\nimport { displayTopRatedMovies } from './topRatedMovies.js';\n\nconst searchInput = document.querySelector('.search__input');\nconst searchButton = document.querySelector('.search');\n\nconst api_key = process.env.API_KEY;    \nconst multiSearch_url = 'https://api.themoviedb.org/3/search/multi?api_key=' + api_key + '&include_adult=false';\nconst upcoming_URL = 'https://api.themoviedb.org/3/movie/upcoming?api_key=' + api_key;\nconst topRated_URL = 'https://api.themoviedb.org/3/movie/top_rated?api_key=' + api_key;\n\n// Get data\nconst getData = (url, func) => {\n    fetch(url)\n        .then(response => response.json())\n        .then(data => func(data))\n        .catch(error => {\n            if (error) {\n                console.log(error);\n            }\n        })\n}\n\n//  SEARCH BAR EVENT LISTENERS\nsearchInput.addEventListener('keyup', (e) => {\n\n    if (searchInput.value === '') {\n        false;\n    } else {\n        if (e.keyCode === 13) {\n            searchMovie();\n        }\n    }\n})\n\nsearchButton.addEventListener('click', () => {\n    if (searchInput.value === '') {\n        false;\n    } else {\n        searchMovie();\n    }\n});\n\n// Handle movie search\nconst searchMovie = () => {\n    const value = searchInput.value;\n    const multipleSearch = multiSearch_url + '&query=' + value;\n    getData(multipleSearch, displaySearch);\n}\n\n// Handle upcoming movies\nconst handleUpcomingMovies = () => {\n    getData(upcoming_URL, displayUpcomingMovies);\n}\n\n// Handle top rated movies\nconst handleTopRatedMovies = () => {\n    getData(topRated_URL, displayTopRatedMovies);\n}\n\n// Display movie info on click\nconst handleModal = () => {\n    const modal = document.querySelector('.modal');\n    const closeModal = document.querySelector('.close__modal i');\n\n    closeModal.addEventListener('click', () => {\n        if (modal) {\n            modal.classList.remove('isShown');\n        }\n    })\n\n    document.addEventListener('click', (e) => {\n        const target = e.target;\n        const movieID = target.dataset.movieId;\n        \n        if (target.tagName.toLowerCase() === 'img') {\n            modal.classList.add('isShown');\n            findById(movieID);\n        }\n    })\n}\n\nhandleModal();\nhandleUpcomingMovies();\nhandleTopRatedMovies();"]}