{"version":3,"sources":["js/movieSearch.js","js/upcomingMovies.js","js/topRatedMovies.js","js/main.js"],"names":["searchInput","document","querySelector","imageBaseURL","backdrop_image","displaySearch","obj","upcomingContainer","topRatedContainer","output","heading","result","results","count","total_results","classList","add","innerText","movie","tvShows","forEach","item","media_type","poster_path","posterPlaceholder","title","name","innerHTML","value","displayUpcomingMovies","upcoming","poster","overview","movieById_URL","id","fetch","then","response","json","movieById","genres","moviePoster","homepage","runtime","catch","error","displayTopRatedMovies","topRated","topRatedHeading","movies","searchButton","api_key","multiSearch_url","upcoming_URL","topRated_URL","getData","url","func","data","console","log","addEventListener","e","keyCode","searchMovie","handleUpcomingMovies","handleTopRatedMovies"],"mappings":";;;AAQO,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,mBAAA,EAHP,IAAA,EAAA,EAAA,QAAA,kCAGO,SAAA,EAAA,GAAA,OAAA,GAAA,EAAA,WAAA,EAAA,CAAA,QAAA,GARP,IAAMA,EAAcC,SAASC,cAAc,kBACrCC,EAAe,mCACfC,EAAiB,uCAMVC,EAAgB,SAACC,GACpBC,IAAAA,EAAoBN,SAASC,cAAc,aAC3CM,EAAoBP,SAASC,cAAc,eAC3CO,EAASR,SAASC,cAAc,WAChCQ,EAAUT,SAASC,cAAc,6BACjCS,EAASL,EAAIM,QACbC,EAAQP,EAAIQ,cAGlBP,EAAkBQ,UAAUC,IAAI,WAChCR,EAAkBO,UAAUC,IAAI,WAG5BN,EAAQO,UADE,IAAVJ,EACoB,oBAEGA,GAAAA,OAAAA,EAAvB,kBAGAK,IAAAA,EAAQ,GACRC,EAAU,GAEdR,EAAOS,QAAQ,SAAAC,GACa,UAApBA,EAAKC,WACLJ,GAEeG,2EAAAA,OAAqB,OAArBA,EAAKE,YAAuBC,EAA5B,QAAgDrB,EAAekB,EAAKE,YAC5CF,+FAAAA,OAAAA,EAAKI,MAH5C,kGAM2B,OAApBJ,EAAKC,aACZH,GAEeE,2EAAAA,OAAqB,OAArBA,EAAKE,YAAuBC,EAA5B,QAAgDrB,EAAekB,EAAKE,YAC5CF,+FAAAA,OAAAA,EAAKK,KAH5C,qGAURjB,EAAOkB,UAAYT,EAAQC,EAG3BnB,EAAY4B,MAAQ,IA3CjB,QAAA,cAAA;;ACNA,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,2BAAA,EAFP,IAAMzB,EAAe,mCAER0B,EAAwB,SAACvB,GAC5BwB,IAAAA,EAAW7B,SAASC,cAAc,qBAClCgB,EAAQZ,EAAIM,QAAQ,GACpBmB,EAAS5B,EAAee,EAAMK,YAC9BE,EAAQP,EAAMO,MACdO,EAAWd,EAAMc,SACjBC,EAAgB,sCAAwCf,EAAMgB,GAAK,2DAGzEC,MAAMF,GACDG,KAAK,SAAAC,GAAYA,OAAAA,EAASC,SAC1BF,KAAK,SAAAG,GACIC,IAAAA,EAASD,EAAUC,OAKrBC,GAJaF,EAAUG,SACXH,EAAUI,QAMgBlB,yKAAAA,OAAAA,EACDe,8DAAAA,OAAAA,EAAO,GAAGd,KAAgDc,6CAAAA,OAAAA,EAAO,GAAGd,KAItDM,sPAAAA,OAAAA,EAKyBD,mVAAAA,OAAAA,EAbhF,qDAkBAD,EAASH,UAAYc,IAExBG,MAAM,SAAAC,GAASA,OAAAA,KArCjB,QAAA,sBAAA;;ACAA,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,2BAAA,EAFP,IAAM1C,EAAe,mCAER2C,EAAwB,SAACxC,GAC5ByC,IAAAA,EAAW9C,SAASC,cAAc,uBAClC8C,EAAkB/C,SAASC,cAAc,wBACzC+C,EAAS3C,EAAIM,QAGnBoC,EAAgB/B,UAAY,mBAIxBC,IAAAA,EAAQ,GACZ+B,EAAO7B,QAAQ,SAAAC,GACXH,GAEef,qEAAAA,OAAAA,EAAekB,EAAKE,YACAF,oFAAAA,OAAAA,EAAKI,MAHxC,0BAQJsB,EAASpB,UAAYT,GApBlB,QAAA,sBAAA;;ACuDa,aAzDpB,IAAA,EAAA,QAAA,oBACA,EAAA,QAAA,uBACA,EAAA,QAAA,uBAEMlB,EAAcC,SAASC,cAAc,kBACrCgD,EAAejD,SAASC,cAAc,WAEtCiD,EAAN,mCACMC,EAAkB,qDAAuDD,EAAU,uBACnFE,EAAe,uDAAyDF,EACxEG,EAAe,wDAA0DH,EAGzEI,EAAU,SAACC,EAAKC,GAClBtB,MAAMqB,GACDpB,KAAK,SAAAC,GAAYA,OAAAA,EAASC,SAC1BF,KAAK,SAAAsB,GAAQD,OAAAA,EAAKC,KAClBd,MAAM,SAAAC,GAASc,OAAAA,QAAQC,IAAIf,MAIpC7C,EAAY6D,iBAAiB,QAAS,SAACC,GACT,KAAtB9D,EAAY4B,OAGM,KAAdkC,EAAEC,SACFC,MAKZd,EAAaW,iBAAiB,QAAS,WACT,KAAtB7D,EAAY4B,OAGZoC,MAKR,IAAMA,EAAc,WACVpC,IAAAA,EAAQ5B,EAAY4B,MAE1B2B,EADuBH,EAAkB,UAAYxB,EAC7BvB,EAAjB,gBAIL4D,EAAuB,WACzBV,EAAQF,EAAcxB,EAAf,wBAILqC,EAAuB,WACzBX,EAAQD,EAAcR,EAAf,wBAGXmB,IACAC","file":"main.a20d33b6.js","sourceRoot":"..","sourcesContent":["const searchInput = document.querySelector('.search__input');\nconst imageBaseURL = 'https://image.tmdb.org/t/p/w500/';\nconst backdrop_image = 'https://image.tmdb.org/t/p/original/'\n\n// Poster placeholder\nimport posterPlaceholder from '../img/poster_unavailable.jpg';\n\n// HANDLE SEARCH DISPLAY\nexport const displaySearch = (obj) => {\n    const upcomingContainer = document.querySelector('.upcoming');\n    const topRatedContainer = document.querySelector('.top__rated');\n    const output = document.querySelector('.output');\n    const heading = document.querySelector('.search__results--heading');\n    const result = obj.results;\n    const count = obj.total_results;\n\n    // clear container\n    upcomingContainer.classList.add('hideAll');\n    topRatedContainer.classList.add('hideAll');\n\n    if (count === 0) {\n        heading.innerText = 'No results found.';\n    } else {\n        heading.innerText = `${count} results found`;\n    }\n    \n    let movie = '';\n    let tvShows = '';\n\n    result.forEach(item => {\n        if (item.media_type === 'movie') {\n            movie +=`\n            <div class=\"template__wrapper\">\n                <img src=${item.poster_path === null ? posterPlaceholder : imageBaseURL + item.poster_path} class=\"search__movie--poster\" alt=\"\" />\n                <h4 class=\"search__movie--title\">${item.title}</h4>\n                <button class=\"more__details\">More details</button>\n            </div>`;\n        } else if (item.media_type === 'tv') {\n            tvShows +=`\n            <div class=\"template__wrapper\">\n                <img src=${item.poster_path === null ? posterPlaceholder : imageBaseURL + item.poster_path} class=\"search__movie--poster\" alt=\"\" />\n                <h4 class=\"search__movie--title\">${item.name}</h4>\n                <button class=\"more__details\">More details</button>\n            </div>`;\n        }\n    })\n\n    // Output results\n    output.innerHTML = movie + tvShows;\n\n    // Clear input field\n    searchInput.value = '';\n}","const imageBaseURL = 'https://image.tmdb.org/t/p/w500/';\n\nexport const displayUpcomingMovies = (obj) => {\n    const upcoming = document.querySelector('.upcoming__movies');\n    const movie = obj.results[5];\n    const poster = imageBaseURL + movie.poster_path;\n    const title = movie.title;\n    const overview = movie.overview;\n    const movieById_URL = 'https://api.themoviedb.org/3/movie/' + movie.id + '?api_key=' + process.env.API_KEY + '&language=en-US'\n\n    // get current movie info\n    fetch(movieById_URL)\n        .then(response => response.json())\n        .then(movieById => {\n            const genres = movieById.genres; // returns an array\n            const homepage = movieById.homepage; // returns string\n            const runtime = movieById.runtime;\n\n\n            let moviePoster = `\n                <div class=\"upcoming__card--wrapper\">\n                    <div class=\"upcoming__description\">\n                        <h1 class=\"upcoming__title\">${title}</h1>\n                        <p class=\"upcoming__genre\">${genres[0].name} <span class=\"genre__separator\">|</span> ${genres[1].name}</p>\n                        <div class=\"upcoming__overview\">\n                            <h3 class=\"overview__title\">The <br />Story</h3>\n                            <div>\n                                <p class=\"overview__description\">${overview}</p>\n                                <button type=\"button\" class=\"upcoming__button\">Read more <i class=\"fas fa-long-arrow-alt-right\"></i></button>\n                            </div>\n                        </div>\n                    </div>\n                    <div class=\"upcoming__poster--container\" style=\"background-image: url(${poster});\"></div>\n                </div>\n            `;\n            \n            // Output results\n            upcoming.innerHTML = moviePoster;\n        })\n        .catch(error => error);\n        \n    // fetch(`https://api.themoviedb.org/3/movie/${movie.id}?api_key=${process.env.API_KEY}&language=en-US`)\n    //     .then(response => response.json())\n    //     .then(data => console.log(data))\n\n    \n\n    \n    // let movie = '';\n    // movies.forEach(item => {\n    //     movie +=`\n    //     <div class=\"upcoming__card--wrapper\">\n    //         <div class=\"upcoming__poster--container\">\n    //             <img src=${imageBaseURL + item.poster_path} class=\"upcoming__poster\" alt=\"\" />\n    //         </div>\n    //         <div class=\"upcoming__description\">\n    //             <h1 class=\"upcoming__title\">${item.title}</h1>\n    //             <div>\n    //                 <p class=\"upcoming__story\">Story</p>\n    //                 <p class=\"upcoming__story--description\">${item.overview}</p>\n    //             </div>\n    //         </div>\n    //     </div>`;\n    // })\n}","const imageBaseURL = 'https://image.tmdb.org/t/p/w342/';\n\nexport const displayTopRatedMovies = (obj) => {\n    const topRated = document.querySelector('.top__rated--movies');\n    const topRatedHeading = document.querySelector('.top__rated--heading');\n    const movies = obj.results;\n    \n    // Insert heading\n    topRatedHeading.innerText = 'Top Rated Movies';\n\n\n    // Create movie card\n    let movie = '';\n    movies.forEach(item => {\n        movie +=`\n        <div class=\"top__rated--wrapper\">\n            <img src=${imageBaseURL + item.poster_path} class=\"top__rated--poster\" alt=\"\" />\n            <p class=\"top__rated--title\">${item.title}</p>\n        </div>`;\n    })\n\n    // Output results\n    topRated.innerHTML = movie;\n}","import { displaySearch } from './movieSearch.js';\nimport { displayUpcomingMovies } from './upcomingMovies.js';\nimport { displayTopRatedMovies } from './topRatedMovies.js';\n\nconst searchInput = document.querySelector('.search__input');\nconst searchButton = document.querySelector('.search');\n\nconst api_key = process.env.API_KEY;\nconst multiSearch_url = 'https://api.themoviedb.org/3/search/multi?api_key=' + api_key + '&include_adult=false';\nconst upcoming_URL = 'https://api.themoviedb.org/3/movie/upcoming?api_key=' + api_key;\nconst topRated_URL = 'https://api.themoviedb.org/3/movie/top_rated?api_key=' + api_key;\n\n// Get data\nconst getData = (url, func) => {\n    fetch(url)\n        .then(response => response.json())\n        .then(data => func(data))\n        .catch(error => console.log(error))\n}\n\n//  SEARCH BAR EVENT LISTENERS\nsearchInput.addEventListener('keyup', (e) => {\n    if (searchInput.value === '') {\n        false;\n    } else {\n        if (e.keyCode === 13) {\n            searchMovie();\n        }\n    }\n})\n\nsearchButton.addEventListener('click', () => {\n    if (searchInput.value === '') {\n        false;\n    } else {\n        searchMovie();\n    }\n});\n\n// Handle movie search\nconst searchMovie = () => {\n    const value = searchInput.value;\n    const multipleSearch = multiSearch_url + '&query=' + value;\n    getData(multipleSearch, displaySearch);\n}\n\n// Handle upcoming movies\nconst handleUpcomingMovies = () => {\n    getData(upcoming_URL, displayUpcomingMovies);\n}\n\n// Handle top rated movies\nconst handleTopRatedMovies = () => {\n    getData(topRated_URL, displayTopRatedMovies);\n}\n\nhandleUpcomingMovies();\nhandleTopRatedMovies();"]}