{"version":3,"sources":["js/movieSearch.js","js/upcomingMovies.js","js/topRatedMovies.js","js/main.js"],"names":["searchInput","document","querySelector","imageBaseURL","backdrop_image","displaySearch","obj","upcomingContainer","topRatedContainer","output","heading","result","results","count","total_results","classList","add","innerText","movie","tvShows","forEach","item","media_type","poster_path","posterPlaceholder","title","name","innerHTML","value","displayUpcomingMovies","upcoming","poster","overview","moviePoster","displayTopRatedMovies","topRated","movies","searchButton","api_key","multiSearch_url","upcoming_URL","topRated_URL","getData","url","func","fetch","then","response","json","data","catch","error","console","log","addEventListener","e","keyCode","searchMovie","handleUpcomingMovies","handleTopRatedMovies"],"mappings":"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","file":"main.51c7664d.js","sourceRoot":"..","sourcesContent":["const searchInput = document.querySelector('.search__input');\nconst imageBaseURL = 'https://image.tmdb.org/t/p/w500/';\nconst backdrop_image = 'https://image.tmdb.org/t/p/original/'\n\n// Poster placeholder\nimport posterPlaceholder from '../img/poster_unavailable.jpg';\n\n// HANDLE SEARCH DISPLAY\nexport const displaySearch = (obj) => {\n    const upcomingContainer = document.querySelector('.upcoming');\n    const topRatedContainer = document.querySelector('.top__rated');\n    const output = document.querySelector('.output');\n    const heading = document.querySelector('.search__results--heading');\n    const result = obj.results;\n    const count = obj.total_results;\n\n    // clear container\n    upcomingContainer.classList.add('hideAll');\n    topRatedContainer.classList.add('hideAll');\n\n    if (count === 0) {\n        heading.innerText = 'No results found.';\n    } else {\n        heading.innerText = `${count} results found`;\n    }\n    \n    let movie = '';\n    let tvShows = '';\n\n    result.forEach(item => {\n        if (item.media_type === 'movie') {\n            movie +=`\n            <div class=\"template__wrapper\">\n                <img src=${item.poster_path === null ? posterPlaceholder : imageBaseURL + item.poster_path} class=\"search__movie--poster\" alt=\"\" />\n                <h4 class=\"search__movie--title\">${item.title}</h4>\n                <button class=\"more__details\">More details</button>\n            </div>`;\n        } else if (item.media_type === 'tv') {\n            tvShows +=`\n            <div class=\"template__wrapper\">\n                <img src=${item.poster_path === null ? posterPlaceholder : imageBaseURL + item.poster_path} class=\"search__movie--poster\" alt=\"\" />\n                <h4 class=\"search__movie--title\">${item.name}</h4>\n                <button class=\"more__details\">More details</button>\n            </div>`;\n        }\n    })\n\n    // Output results\n    output.innerHTML = movie + tvShows;\n\n    // Clear input field\n    searchInput.value = '';\n}","const imageBaseURL = 'https://image.tmdb.org/t/p/w500/';\n\nexport const displayUpcomingMovies = (obj) => {\n    const upcoming = document.querySelector('.upcoming__movies');\n    const movie = obj.results[10];\n    const poster = imageBaseURL + movie.poster_path;\n    const title = movie.title;\n    const overview = movie.overview;\n\n\n    let moviePoster = `\n        <div class=\"upcoming__card--wrapper\">\n            <div class=\"upcoming__description\">\n                <h1 class=\"upcoming__title\">${title}</h1>\n                <div class=\"upcoming__overview\">\n                    <h3 class=\"overview__title\">The <br />Story</h3>\n                    <div>\n                        <p class=\"overview__description\">${overview}</p>\n                        <button type=\"button\" class=\"upcoming__button\">Read more <i class=\"fas fa-long-arrow-alt-right\"></i></button>\n                    </div>\n                </div>\n            </div>\n            <div class=\"upcoming__poster--container\" style=\"background-image: url(${poster});\"></div>\n        </div>\n    `;\n\n    \n    // let movie = '';\n    // movies.forEach(item => {\n    //     movie +=`\n    //     <div class=\"upcoming__card--wrapper\">\n    //         <div class=\"upcoming__poster--container\">\n    //             <img src=${imageBaseURL + item.poster_path} class=\"upcoming__poster\" alt=\"\" />\n    //         </div>\n    //         <div class=\"upcoming__description\">\n    //             <h1 class=\"upcoming__title\">${item.title}</h1>\n    //             <div>\n    //                 <p class=\"upcoming__story\">Story</p>\n    //                 <p class=\"upcoming__story--description\">${item.overview}</p>\n    //             </div>\n    //         </div>\n    //     </div>`;\n    // })\n\n    // Output results\n    upcoming.innerHTML = moviePoster;\n}","const imageBaseURL = 'https://image.tmdb.org/t/p/w500/';\n\nexport const displayTopRatedMovies = (obj) => {\n    const topRated = document.querySelector('.top__rated--movies');\n    const movies = obj.results;\n    \n    let movie = '';\n    movies.forEach(item => {\n        movie +=`\n        <div class=\"top__rated--wrapper\">\n            <img src=${imageBaseURL + item.poster_path} class=\"top__rated--poster\" alt=\"\" />\n        </div>`;\n    })\n\n    // Output results\n    topRated.innerHTML = movie;\n}","import { displaySearch } from './movieSearch.js';\nimport { displayUpcomingMovies } from './upcomingMovies.js';\nimport { displayTopRatedMovies } from './topRatedMovies.js';\n\nconst searchInput = document.querySelector('.search__input');\nconst searchButton = document.querySelector('.search');\n\nconst api_key = process.env.API_KEY;\nconst multiSearch_url = 'https://api.themoviedb.org/3/search/multi?api_key=' + api_key + '&include_adult=false';\nconst upcoming_URL = 'https://api.themoviedb.org/3/movie/upcoming?api_key=' + api_key;\nconst topRated_URL = 'https://api.themoviedb.org/3/movie/top_rated?api_key=' + api_key;\n\n// Get data\nconst getData = (url, func) => {\n    fetch(url)\n        .then(response => response.json())\n        .then(data => func(data))\n        .catch(error => console.log(error))\n}\n\n//  SEARCH BAR EVENT LISTENERS\nsearchInput.addEventListener('keyup', (e) => {\n    if (searchInput.value === '') {\n        false;\n    } else {\n        if (e.keyCode === 13) {\n            searchMovie();\n        }\n    }\n})\n\nsearchButton.addEventListener('click', () => {\n    if (searchInput.value === '') {\n        false;\n    } else {\n        searchMovie();\n    }\n});\n\n\n// Handle movie search\nconst searchMovie = () => {\n    const value = searchInput.value;\n    const multipleSearch = multiSearch_url + '&query=' + value;\n    getData(multipleSearch, displaySearch);\n}\n\n\n// Handle upcoming movies\nconst handleUpcomingMovies = () => {\n    getData(upcoming_URL, displayUpcomingMovies);\n}\n\n// Handle top rated movies\nconst handleTopRatedMovies = () => {\n    getData(topRated_URL, displayTopRatedMovies);\n}\n\n\nhandleUpcomingMovies();\nhandleTopRatedMovies();"]}